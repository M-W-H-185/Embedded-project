C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTEXTEND CODE
                    - PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          #include "os_task.h"
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          
  18          
  19          
  20          
  21          // 任务堆栈区
  22          os_uint8_t idata task_stack1[MAX_TASK_DEP];                     /*任务1堆栈.*/
  23          os_uint8_t idata task_stack2[MAX_TASK_DEP];                     /*任务2堆栈.*/
  24          // 任务堆栈区
  25          
  26          
  27          
  28          void task1()
  29          {
  30   1              while(1)
  31   1              {
  32   2                      LED_R = 1;
  33   2                      os_delay(500);
  34   2      
  35   2                      LED_R = 0;
  36   2                      os_delay(500);
  37   2                      
  38   2                      LED_R = 1;
  39   2                      os_delay(500);
  40   2                      os_switch();
  41   2      
  42   2              }
  43   1      }
  44          
  45          void task2()
  46          {
  47   1      
  48   1              while(1)
  49   1              {
  50   2                      LED_Y = 1;
  51   2                      os_delay(1000);
  52   2                      os_delay(1000);
  53   2                      
  54   2                      LED_Y = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 2   

  55   2                      os_delay(1000);
  56   2                      os_delay(1000);
  57   2                      os_switch();
  58   2      
  59   2              }
  60   1      }
  61          
  62          
  63          unsigned int cut = 0;
  64          
  65          //void time0_handle(void)large reentrant
  66          void time0_handle(void)interrupt 1
  67          {
  68   1              cut++;
  69   1      
  70   1              if(cut == 500)
  71   1              {
  72   2                      cut = 0;
  73   2                      LED_G = !LED_G;
  74   2              }
  75   1              time_handleHook();
  76   1      }
  77          
  78          void Timer0_Init(void)          //1毫秒@11.0592MHz
  79          {
  80   1              AUXR |= 0x80;                   //定时器时钟1T模式
  81   1              TMOD &= 0xF0;                   //设置定时器模式
  82   1              TL0 = 0xCD;                             //设置定时初始值
  83   1              TH0 = 0xD4;                             //设置定时初始值
  84   1              TF0 = 0;                                //清除TF0标志
  85   1              TR0 = 1;                                //定时器0开始计时
  86   1              ET0 = 1;                                //使能定时器0中断
  87   1      }
  88          
  89          /* 主函数 */
  90          void main()
  91          {
  92   1              P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
  93   1              P0M1 = 0x00;
  94   1              Timer0_Init();
  95   1              EA = 1;
  96   1              P_SW2 |= (1<<7);
  97   1      
  98   1              os_task_create(task1, &task_stack1, 1);//将task1函数装入0号槽
  99   1              os_task_create(task2, &task_stack2, 2);//将task2函数装入1号槽
 100   1              os_start();
 101   1      
 102   1      
 103   1              while(1)
 104   1              {
 105   2      
 106   2              }
 107   1              
 108   1      
 109   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
0000         ?C0001:
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 D285              SETB    LED_R
                                           ; SOURCE LINE # 33
0002 7FF4              MOV     R7,#0F4H
0004 7E01              MOV     R6,#01H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 35
000D C285              CLR     LED_R
                                           ; SOURCE LINE # 36
000F 7FF4              MOV     R7,#0F4H
0011 7E01              MOV     R6,#01H
0013 7D00              MOV     R5,#00H
0015 7C00              MOV     R4,#00H
0017 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 38
001A D285              SETB    LED_R
                                           ; SOURCE LINE # 39
001C 7FF4              MOV     R7,#0F4H
001E 7E01              MOV     R6,#01H
0020 7D00              MOV     R5,#00H
0022 7C00              MOV     R4,#00H
0024 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 40
0027 120000      E     LCALL   os_switch
                                           ; SOURCE LINE # 42
002A 80D4              SJMP    ?C0001
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000         ?C0004:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 D286              SETB    LED_Y
                                           ; SOURCE LINE # 51
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 52
000D 7FE8              MOV     R7,#0E8H
000F 7E03              MOV     R6,#03H
0011 7D00              MOV     R5,#00H
0013 7C00              MOV     R4,#00H
0015 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 54
0018 C286              CLR     LED_Y
                                           ; SOURCE LINE # 55
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 4   

001A 7FE8              MOV     R7,#0E8H
001C 7E03              MOV     R6,#03H
001E 7D00              MOV     R5,#00H
0020 7C00              MOV     R4,#00H
0022 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 56
0025 7FE8              MOV     R7,#0E8H
0027 7E03              MOV     R6,#03H
0029 7D00              MOV     R5,#00H
002B 7C00              MOV     R4,#00H
002D 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 57
0030 120000      E     LCALL   os_switch
                                           ; SOURCE LINE # 59
0033 80CB              SJMP    ?C0004
             ; FUNCTION task2 (END)

             ; FUNCTION time0_handle (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 68
001D 0500        R     INC     cut+01H
001F E500        R     MOV     A,cut+01H
0021 7002              JNZ     ?C0013
0023 0500        R     INC     cut
0025         ?C0013:
                                           ; SOURCE LINE # 70
0025 B4F40D            CJNE    A,#0F4H,?C0007
0028 E500        R     MOV     A,cut
002A B40108            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
002D 750000      R     MOV     cut,#00H
0030 750000      R     MOV     cut+01H,#00H
                                           ; SOURCE LINE # 73
0033 B287              CPL     LED_G
                                           ; SOURCE LINE # 74
0035         ?C0007:
                                           ; SOURCE LINE # 75
0035 120000      E     LCALL   time_handleHook
                                           ; SOURCE LINE # 76
0038 D007              POP     AR7
003A D006              POP     AR6
003C D005              POP     AR5
003E D004              POP     AR4
0040 D003              POP     AR3
0042 D002              POP     AR2
0044 D001              POP     AR1
0046 D000              POP     AR0
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 5   

0048 D0D0              POP     PSW
004A D082              POP     DPL
004C D083              POP     DPH
004E D0F0              POP     B
0050 D0E0              POP     ACC
0052 32                RETI    
             ; FUNCTION time0_handle (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 81
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 82
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 83
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 84
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 85
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 86
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 87
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 93
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 94
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 95
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 96
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 98
000D F500        E     MOV     ?_os_task_create?BYTE+03H,A
000F 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack1
0012 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack1
0015 F500        E     MOV     ?_os_task_create?BYTE+06H,A
0017 750001      E     MOV     ?_os_task_create?BYTE+07H,#01H
001A 7BFF              MOV     R3,#0FFH
001C 7A00        R     MOV     R2,#HIGH task1
001E 7900        R     MOV     R1,#LOW task1
0020 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 99
0023 750000      E     MOV     ?_os_task_create?BYTE+03H,#00H
0026 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack2
0029 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack2
002C 750000      E     MOV     ?_os_task_create?BYTE+06H,#00H
002F 750002      E     MOV     ?_os_task_create?BYTE+07H,#02H
0032 7BFF              MOV     R3,#0FFH
0034 7A00        R     MOV     R2,#HIGH task2
0036 7900        R     MOV     R1,#LOW task2
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 14:20:22 PAGE 6   

0038 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 100
003B 120000      E     LCALL   os_start
003E         ?C0010:
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 106
003E 80FE              SJMP    ?C0010
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =    100    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
