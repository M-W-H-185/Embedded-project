C51 COMPILER V9.59.0.0   MAIN                                                              12/21/2023 21:58:46 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5_C51\C51\BIN\C51.EXE main.c ROM(SMALL) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OB
                    -JECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          
  11          #include "os_typedef.h"
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          
  18          /* 固定延时1毫秒 @35MHz*/
  19          void Delay1ms()   //@35MHz 
  20          {
  21   1        unsigned char i, j;
  22   1      
  23   1        _nop_();
  24   1        _nop_();
  25   1        i = 46;
  26   1        j = 113;
  27   1        do
  28   1        {
  29   2          while (--j);
  30   2        } while (--i);
  31   1      }
  32          
  33          /* n毫秒延时函数 参数给几 就延时几毫秒 */
  34          void delay_ms(unsigned int ms) 
  35          {
  36   1        while(ms--)
  37   1        {
  38   2          Delay1ms();
  39   2        }
  40   1      }
  41          
  42           
  43          #define MAX_TASKS 2       /*任务槽个数.必须和实际任务数一至*/
  44          #define MAX_TASK_DEP 20   /*最大栈深.最低不得少于2个,保守值为12*/
  45          unsigned char idata task_stack[MAX_TASKS][MAX_TASK_DEP];/*任务堆栈.*/
  46          unsigned int task_id;    /*当前活动任务号*/
  47          unsigned int max_task = 0;
  48           
  49          unsigned char idata task_sp[MAX_TASKS];
  50           
  51          void task_switch()
  52          {
  53   1          task_sp[task_id] = SP;
  54   1          task_id++;
C51 COMPILER V9.59.0.0   MAIN                                                              12/21/2023 21:58:46 PAGE 2   

  55   1          if(task_id == max_task)
  56   1          {
  57   2            task_id = 0;
  58   2          }
  59   1          SP = task_sp[task_id];
  60   1      }
  61           
  62          void task_load(unsigned int fn, int tid)
  63          {
  64   1          task_sp[tid] = task_stack[tid]+1;
  65   1          task_stack[tid][0] = (unsigned int)fn & 0xff;
  66   1          task_stack[tid][1] = (unsigned int)fn >> 8;
  67   1          ++max_task;
  68   1      }
  69           
  70          void task1()
  71          {
  72   1          static unsigned char i;
  73   1          while(1)
  74   1          {
  75   2            i++;
  76   2            LED_R = !LED_R;
  77   2            delay_ms(100);
  78   2            task_switch();
  79   2          }
  80   1      }
  81           
  82          void task2()
  83          {
  84   1          static unsigned char j;
  85   1          while(1)
  86   1          {
  87   2            j+=2;
  88   2            LED_Y = !LED_Y;
  89   2            delay_ms(100);
  90   2            task_switch();
  91   2          }
  92   1      }
  93           
  94          void switch_to(unsigned int tid)
  95          {
  96   1          task_id = tid;
  97   1          SP = task_sp[tid];
  98   1          return;
  99   1      }
 100          
 101          
 102          /* 主函数 */
 103          void main()
 104          {
 105   1        P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 106   1        P0M1 = 0x00;
 107   1        LED_Y = 0;
 108   1        task_load(task1, 0);//将task1函数装入0号槽
 109   1        task_load(task2, 1);//将task2函数装入1号槽
 110   1        switch_to(0);
 111   1      
 112   1          while(1)
 113   1        {
 114   2      
 115   2        }
 116   1        
C51 COMPILER V9.59.0.0   MAIN                                                              12/21/2023 21:58:46 PAGE 3   

 117   1      
 118   1      }
 119          
 120          
 121          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =     42    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
