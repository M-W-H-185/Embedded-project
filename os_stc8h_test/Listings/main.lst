C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5_C51\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTE
                    -XTEND CODE PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          
  12          #include "os_typedef.h"
  13          
  14          /* 发光二极管定义 */
  15          sbit LED_R = P0^5;    // 红色LED
  16          sbit LED_Y = P0^6;    // 黄色LED
  17          sbit LED_G = P0^7;    // 绿色LED
  18          
  19          /* 固定延时1毫秒 @35MHz*/
  20          void Delay1ms()   //@35MHz 
  21          {
  22   1        unsigned char i, j;
  23   1      
  24   1        _nop_();
  25   1        _nop_();
  26   1        i = 46;
  27   1        j = 113;
  28   1        do
  29   1        {
  30   2          while (--j);
  31   2        } while (--i);
  32   1      }
  33          
  34          /* n毫秒延时函数 参数给几 就延时几毫秒 */
  35          void delay_ms(unsigned int ms) 
  36          {
  37   1        while(ms--)
  38   1        {
  39   2          Delay1ms();
  40   2        }
  41   1      }
  42          
  43           
  44          #define MAX_TASKS 2       /*任务槽个数.必须和实际任务数一至*/
  45          #define MAX_TASK_DEP 20   /*最大栈深.最低不得少于2个,保守值为12*/
  46          os_uint8_t idata task_stack1[MAX_TASK_DEP];/*任务堆栈.*/
  47          os_uint8_t idata task_stack2[MAX_TASK_DEP];/*任务堆栈.*/
  48          unsigned int task_id;    /*当前活动任务号*/
  49          unsigned int max_task = 0;
  50           
  51          os_uint8_t idata task_sp[MAX_TASKS];
  52          
  53          void task_switch()
  54          {
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 2   

  55   1      
  56   1          task_sp[task_id] = SP;
  57   1          task_id++;
  58   1          if(task_id == max_task)
  59   1          {
  60   2            task_id = 0;
  61   2          }
  62   1      
  63   1          SP = task_sp[task_id];
  64   1      
  65   1      }
  66           
  67          void task_load(void(*task)(void) ,os_uint8_t *tstack,int tid)
  68          {
  69   1      
  70   1        tstack[0] = (unsigned int)task & 0xff;
  71   1        tstack[1] = (unsigned int)task >> 8;
  72   1      
  73   1        task_sp[tid] = tstack+1;
*** WARNING C260 IN LINE 73 OF main.c: '=': pointer truncation
  74   1      
  75   1        ++max_task;
  76   1      }
  77          
  78          void task1()
  79          {
  80   1          unsigned int task1_i = 0;
  81   1      
  82   1          while(1)
  83   1          {
  84   2            LED_R = !LED_R;
  85   2            task1_i ++;
  86   2            task1_i / 120;
*** WARNING C275 IN LINE 86 OF main.c: expression with possibly no effect
  87   2            delay_ms(500);
  88   2            task_switch();
  89   2          }
  90   1      }
  91          
  92          void task2()
  93          {
  94   1      
  95   1        unsigned int task2_i = 0;
  96   1      
  97   1        while(1)
  98   1        {
  99   2      
 100   2          LED_Y = !LED_Y;
 101   2          task2_i ++;
 102   2          task2_i / 120;
*** WARNING C275 IN LINE 102 OF main.c: expression with possibly no effect
 103   2          task2_i * 120;
*** WARNING C275 IN LINE 103 OF main.c: expression with possibly no effect
 104   2          task2_i % 120;
*** WARNING C275 IN LINE 104 OF main.c: expression with possibly no effect
 105   2      
 106   2          delay_ms(500);
 107   2          task_switch();
 108   2        }
 109   1      }
 110          
 111          void os_Start()
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 3   

 112          {
 113   1        task_id = 0;
 114   1        SP = task_sp[task_id];  
 115   1        return;
 116   1      }
 117          
 118          unsigned int cut = 0;
 119          
 120          void Timer0_Isr(void) interrupt 1
 121          {
 122   1      unsigned int c1ut = 0;
 123   1      unsigned int c32ut = 0;
 124   1      unsigned int c2342ut = 0;
 125   1      
 126   1        cut++;
 127   1      
 128   1        if(cut == 500)
 129   1        {
 130   2          cut = 0;
 131   2          LED_G = !LED_G;
 132   2      
 133   2        }
 134   1      }
 135          
 136          void Timer0_Init(void)    //1毫秒@11.0592MHz
 137          {
 138   1        AUXR |= 0x80;     //定时器时钟1T模式
 139   1        TMOD &= 0xF0;     //设置定时器模式
 140   1        TL0 = 0xCD;       //设置定时初始值
 141   1        TH0 = 0xD4;       //设置定时初始值
 142   1        TF0 = 0;        //清除TF0标志
 143   1        TR0 = 1;        //定时器0开始计时
 144   1        ET0 = 1;        //使能定时器0中断
 145   1      }
 146          
 147          
 148          /* 主函数 */
 149          void main()
 150          {
 151   1        P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 152   1        P0M1 = 0x00;
 153   1        Timer0_Init();
 154   1        EA = 1;
 155   1        P_SW2 |= (1<<7);
 156   1        task_load(task1, &task_stack1, 0);//将task1函数装入0号槽
 157   1        task_load(task2, &task_stack2, 1);//将task2函数装入1号槽
 158   1        os_Start();
 159   1      
 160   1      
 161   1        while(1)
 162   1        {
 163   2      
 164   2        }
 165   1        
 166   1      
 167   1      }
 168          
 169          
 170          
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Delay1ms (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 24
0000 00                NOP     
                                           ; SOURCE LINE # 25
0001 00                NOP     
                                           ; SOURCE LINE # 26
;---- Variable 'i' assigned to Register 'R7' ----
0002 7F2E              MOV     R7,#02EH
                                           ; SOURCE LINE # 27
;---- Variable 'j' assigned to Register 'R6' ----
0004 7E71              MOV     R6,#071H
                                           ; SOURCE LINE # 29
0006         ?C0004:
                                           ; SOURCE LINE # 30
0006 DEFE              DJNZ    R6,?C0004
                                           ; SOURCE LINE # 31
0008 DFFC              DJNZ    R7,?C0004
                                           ; SOURCE LINE # 32
000A 22                RET     
             ; FUNCTION Delay1ms (END)

             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 35
;---- Variable 'ms' assigned to Register 'R4/R5' ----
0000 AD07              MOV     R5,AR7
0002 AC06              MOV     R4,AR6
                                           ; SOURCE LINE # 36
0004         ?C0007:
                                           ; SOURCE LINE # 37
0004 ED                MOV     A,R5
0005 1D                DEC     R5
0006 AE04              MOV     R6,AR4
0008 7001              JNZ     ?C0026
000A 1C                DEC     R4
000B         ?C0026:
000B 4E                ORL     A,R6
000C 6005              JZ      ?C0009
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
000E 120000      R     LCALL   Delay1ms
                                           ; SOURCE LINE # 40
0011 80F1              SJMP    ?C0007
                                           ; SOURCE LINE # 41
0013         ?C0009:
0013 22                RET     
             ; FUNCTION _delay_ms (END)

             ; FUNCTION L?0034 (BEGIN)
0000 7FF4              MOV     R7,#0F4H
0002 7E01              MOV     R6,#01H
0004 120000      R     LCALL   _delay_ms
             ; FUNCTION task_switch (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 56
0007 900000      R     MOV     DPTR,#task_id
000A A3                INC     DPTR
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 5   

000B E0                MOVX    A,@DPTR
000C 2400        R     ADD     A,#LOW task_sp
000E F8                MOV     R0,A
000F A681              MOV     @R0,SP
                                           ; SOURCE LINE # 57
0011 E0                MOVX    A,@DPTR
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
0014 7006              JNZ     ?C0027
0016 900000      R     MOV     DPTR,#task_id
0019 E0                MOVX    A,@DPTR
001A 04                INC     A
001B F0                MOVX    @DPTR,A
001C         ?C0027:
                                           ; SOURCE LINE # 58
001C 900000      R     MOV     DPTR,#max_task
001F E0                MOVX    A,@DPTR
0020 FE                MOV     R6,A
0021 A3                INC     DPTR
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 B5060C            CJNE    A,AR6,?C0010
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B B50707            CJNE    A,AR7,?C0010
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
002E E4                CLR     A
002F 900000      R     MOV     DPTR,#task_id
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0035         ?C0010:
                                           ; SOURCE LINE # 63
0035 900000      R     MOV     DPTR,#task_id
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A 2400        R     ADD     A,#LOW task_sp
003C F8                MOV     R0,A
003D E6                MOV     A,@R0
003E F581              MOV     SP,A
                                           ; SOURCE LINE # 65
0040 22                RET     
             ; FUNCTION task_switch (END)

             ; FUNCTION _task_load (BEGIN)
                                           ; SOURCE LINE # 67
0000 900000      R     MOV     DPTR,#task
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 70
000B 900000      R     MOV     DPTR,#task
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 6   

000E A3                INC     DPTR
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B EF                MOV     A,R7
001C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 71
001F 900000      R     MOV     DPTR,#task
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FA                MOV     R2,A
0025 A3                INC     DPTR
0026 EA                MOV     A,R2
0027 FF                MOV     R7,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 900001            MOV     DPTR,#01H
0034 EF                MOV     A,R7
0035 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 73
0038 E9                MOV     A,R1
0039 2401              ADD     A,#01H
003B F9                MOV     R1,A
003C 900000      R     MOV     DPTR,#tid
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 2400        R     ADD     A,#LOW task_sp
0043 F8                MOV     R0,A
0044 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 75
0046 900000      R     MOV     DPTR,#max_task+01H
0049 E0                MOVX    A,@DPTR
004A 04                INC     A
004B F0                MOVX    @DPTR,A
004C 7006              JNZ     ?C0029
004E 900000      R     MOV     DPTR,#max_task
0051 E0                MOVX    A,@DPTR
0052 04                INC     A
0053 F0                MOVX    @DPTR,A
0054         ?C0029:
                                           ; SOURCE LINE # 76
0054 22                RET     
             ; FUNCTION _task_load (END)

             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 78
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 7   

                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
;---- Variable 'task1_i' assigned to Register 'R2/R3' ----
0000 E4                CLR     A
0001 FB                MOV     R3,A
0002 FA                MOV     R2,A
0003         ?C0013:
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0003 B285              CPL     LED_R
                                           ; SOURCE LINE # 85
0005 0B                INC     R3
0006 BB0001            CJNE    R3,#00H,?C0030
0009 0A                INC     R2
000A         ?C0030:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
000A 120000      R     LCALL   L?0034
                                           ; SOURCE LINE # 89
000D 80F4              SJMP    ?C0013
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 95
;---- Variable 'task2_i' assigned to Register 'R2/R3' ----
0000 E4                CLR     A
0001 FB                MOV     R3,A
0002 FA                MOV     R2,A
0003         ?C0016:
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 100
0003 B286              CPL     LED_Y
                                           ; SOURCE LINE # 101
0005 0B                INC     R3
0006 BB0001            CJNE    R3,#00H,?C0031
0009 0A                INC     R2
000A         ?C0031:
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 107
000A 120000      R     LCALL   L?0034
                                           ; SOURCE LINE # 108
000D 80F4              SJMP    ?C0016
             ; FUNCTION task2 (END)

             ; FUNCTION os_Start (BEGIN)
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
0000 E4                CLR     A
0001 900000      R     MOV     DPTR,#task_id
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 8   

0007 900000      R     MOV     DPTR,#task_id
000A A3                INC     DPTR
000B E0                MOVX    A,@DPTR
000C 2400        R     ADD     A,#LOW task_sp
000E F8                MOV     R0,A
000F E6                MOV     A,@R0
0010 F581              MOV     SP,A
                                           ; SOURCE LINE # 116
0012 22                RET     
             ; FUNCTION os_Start (END)

             ; FUNCTION Timer0_Isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C0D0              PUSH    PSW
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 122
0008 900000      R     MOV     DPTR,#c1ut
000B E4                CLR     A
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
000F A3                INC     DPTR
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
0013 A3                INC     DPTR
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
0017 900000      R     MOV     DPTR,#cut+01H
001A E0                MOVX    A,@DPTR
001B 04                INC     A
001C F0                MOVX    @DPTR,A
001D 7006              JNZ     ?C0032
001F 900000      R     MOV     DPTR,#cut
0022 E0                MOVX    A,@DPTR
0023 04                INC     A
0024 F0                MOVX    @DPTR,A
0025         ?C0032:
                                           ; SOURCE LINE # 128
0025 900000      R     MOV     DPTR,#cut
0028 E0                MOVX    A,@DPTR
0029 B4010E            CJNE    A,#01H,?C0021
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E B4F409            CJNE    A,#0F4H,?C0021
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0031 900000      R     MOV     DPTR,#cut
0034 E4                CLR     A
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
0038 B287              CPL     LED_G
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 9   

003A         ?C0021:
003A D0D0              POP     PSW
003C D082              POP     DPL
003E D083              POP     DPH
0040 D0E0              POP     ACC
0042 32                RETI    
             ; FUNCTION Timer0_Isr (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 139
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 140
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 141
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 142
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 143
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 144
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 145
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 152
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 153
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 154
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 155
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 156
000D 900000      R     MOV     DPTR,#?_task_load?BYTE+03H
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 7400        R     MOV     A,#HIGH task_stack1
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 7400        R     MOV     A,#LOW task_stack1
0018 F0                MOVX    @DPTR,A
0019 E4                CLR     A
001A A3                INC     DPTR
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D F0                MOVX    @DPTR,A
001E 7BFF              MOV     R3,#0FFH
0020 7A00        R     MOV     R2,#HIGH task1
0022 7900        R     MOV     R1,#LOW task1
0024 120000      R     LCALL   _task_load
                                           ; SOURCE LINE # 157
C51 COMPILER V9.59.0.0   MAIN                                                              12/24/2023 22:35:04 PAGE 10  

0027 900000      R     MOV     DPTR,#?_task_load?BYTE+03H
002A E4                CLR     A
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        R     MOV     A,#HIGH task_stack2
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 7400        R     MOV     A,#LOW task_stack2
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 E4                CLR     A
0036 F0                MOVX    @DPTR,A
0037 A3                INC     DPTR
0038 04                INC     A
0039 F0                MOVX    @DPTR,A
003A 7BFF              MOV     R3,#0FFH
003C 7A00        R     MOV     R2,#HIGH task2
003E 7900        R     MOV     R1,#LOW task2
0040 120000      R     LCALL   _task_load
                                           ; SOURCE LINE # 158
0043 120000      R     LCALL   os_Start
0046         ?C0023:
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 164
0046 80FE              SJMP    ?C0023
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    388    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     42    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
