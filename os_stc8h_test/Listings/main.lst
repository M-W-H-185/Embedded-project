C51 COMPILER V9.60.7.0   MAIN                                                              01/02/2024 13:29:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS;.\XmRTOS\utils) DEBUG OB
                    -JECTEXTEND CODE PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          #include "os_task.h"
  12          #include "os_queue.h"
  13          /* 发光二极管定义 */
  14          
  15          sbit LED_R = P0^5;    // 红色LED
  16          sbit LED_Y = P0^6;    // 黄色LED
  17          sbit LED_G = P0^7;    // 绿色LED
  18          
  19          
  20          
  21          
  22          // 任务堆栈区
  23          os_uint8_t xdata task_stack1[MAX_TASK_DEP];                     /*任务1堆栈.*/
  24          os_uint8_t xdata task_stack2[MAX_TASK_DEP];                     /*任务2堆栈.*/
  25          // 任务堆栈区
  26          
  27          
  28          
  29          void task1()
  30          {
  31   1              while(1)
  32   1              {
  33   2                      LED_R = 1;
  34   2                      os_delay(100);
  35   2      
  36   2                      LED_R = 0;
  37   2                      os_delay(100);
  38   2                      
  39   2                      LED_R = 1;
  40   2                      os_delay(100);
  41   2      
  42   2              }
  43   1      }
  44          
  45          void task2()
  46          {
  47   1      
  48   1              while(1)
  49   1              {
  50   2                      LED_Y = 1;
  51   2                      os_delay(1000);
  52   2                      os_delay(1000);
  53   2                      
  54   2                      LED_Y = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              01/02/2024 13:29:53 PAGE 2   

  55   2                      os_delay(1000);
  56   2                      os_delay(1000);
  57   2      
  58   2              }
  59   1      }
  60          
  61          
  62          
  63          void Timer0_Init(void)          //1毫秒@11.0592MHz
  64          {
  65   1              AUXR |= 0x80;                   //定时器时钟1T模式
  66   1              TMOD &= 0xF0;                   //设置定时器模式
  67   1              TL0 = 0xCD;                             //设置定时初始值
  68   1              TH0 = 0xD4;                             //设置定时初始值
  69   1              TF0 = 0;                                //清除TF0标志
  70   1              TR0 = 1;                                //定时器0开始计时
  71   1              ET0 = 1;                                //使能定时器0中断
  72   1      }
  73          
  74          unsigned int cut = 0;
  75          // 函数冲重入，由汇编代码调用
  76          void time0_handle(void)large reentrant
  77          //void time0_handle(void)interrupt 1
  78          {
  79   1              cut++;
  80   1      
  81   1              if(cut == 500)
  82   1              {
  83   2                      cut = 0;
  84   2                      LED_G = !LED_G;
  85   2              }
  86   1              time_handleHook();
  87   1      
  88   1      }
  89          
  90          
  91          
  92          /* 主函数 */
  93          void main()
  94          {
  95   1              
  96   1      
  97   1      
  98   1              P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
  99   1              P0M1 = 0x00;
 100   1              Timer0_Init();
 101   1              EA = 1;
 102   1              P_SW2 |= (1<<7);
 103   1              
 104   1              os_task_create(task1, &task_stack1, 2);//将task1函数装入0号槽
 105   1              os_task_create(task2, &task_stack2, 3);//将task2函数装入1号槽
 106   1              os_start();
 107   1      
 108   1      
 109   1              while(1)
 110   1              {
 111   2      
 112   2              }
 113   1              
 114   1      
 115   1      }
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              01/02/2024 13:29:53 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
0000         ?C0001:
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0000 D285              SETB    LED_R
                                           ; SOURCE LINE # 34
0002 7F64              MOV     R7,#064H
0004 7E00              MOV     R6,#00H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 36
000D C285              CLR     LED_R
                                           ; SOURCE LINE # 37
000F 7F64              MOV     R7,#064H
0011 7E00              MOV     R6,#00H
0013 7D00              MOV     R5,#00H
0015 7C00              MOV     R4,#00H
0017 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 39
001A D285              SETB    LED_R
                                           ; SOURCE LINE # 40
001C 7F64              MOV     R7,#064H
001E 7E00              MOV     R6,#00H
0020 7D00              MOV     R5,#00H
0022 7C00              MOV     R4,#00H
0024 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 42
0027 80D7              SJMP    ?C0001
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000         ?C0004:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 D286              SETB    LED_Y
                                           ; SOURCE LINE # 51
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 52
000D 7FE8              MOV     R7,#0E8H
000F 7E03              MOV     R6,#03H
0011 7D00              MOV     R5,#00H
0013 7C00              MOV     R4,#00H
0015 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 54
0018 C286              CLR     LED_Y
                                           ; SOURCE LINE # 55
001A 7FE8              MOV     R7,#0E8H
001C 7E03              MOV     R6,#03H
C51 COMPILER V9.60.7.0   MAIN                                                              01/02/2024 13:29:53 PAGE 4   

001E 7D00              MOV     R5,#00H
0020 7C00              MOV     R4,#00H
0022 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 56
0025 7FE8              MOV     R7,#0E8H
0027 7E03              MOV     R6,#03H
0029 7D00              MOV     R5,#00H
002B 7C00              MOV     R4,#00H
002D 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 58
0030 80CE              SJMP    ?C0004
             ; FUNCTION task2 (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 66
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 67
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 68
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 69
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 70
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 71
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 72
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION _?time0_handle (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 79
0000 0500        R     INC     cut+01H
0002 E500        R     MOV     A,cut+01H
0004 7002              JNZ     ?C0013
0006 0500        R     INC     cut
0008         ?C0013:
                                           ; SOURCE LINE # 81
0008 B4F40C            CJNE    A,#0F4H,?C0008
000B E500        R     MOV     A,cut
000D B40107            CJNE    A,#01H,?C0008
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0010 E4                CLR     A
0011 F500        R     MOV     cut,A
0013 F500        R     MOV     cut+01H,A
                                           ; SOURCE LINE # 84
0015 B287              CPL     LED_G
                                           ; SOURCE LINE # 85
0017         ?C0008:
                                           ; SOURCE LINE # 86
0017 020000      E     LJMP    time_handleHook
             ; FUNCTION _?time0_handle (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
C51 COMPILER V9.60.7.0   MAIN                                                              01/02/2024 13:29:53 PAGE 5   

                                           ; SOURCE LINE # 98
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 99
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 100
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 101
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 102
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 104
000D 750001      E     MOV     ?_os_task_create?BYTE+03H,#01H
0010 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack1
0013 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack1
0016 F500        E     MOV     ?_os_task_create?BYTE+06H,A
0018 750002      E     MOV     ?_os_task_create?BYTE+07H,#02H
001B 7BFF              MOV     R3,#0FFH
001D 7A00        R     MOV     R2,#HIGH task1
001F 7900        R     MOV     R1,#LOW task1
0021 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 105
0024 750001      E     MOV     ?_os_task_create?BYTE+03H,#01H
0027 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack2
002A 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack2
002D 750000      E     MOV     ?_os_task_create?BYTE+06H,#00H
0030 750003      E     MOV     ?_os_task_create?BYTE+07H,#03H
0033 7BFF              MOV     R3,#0FFH
0035 7A00        R     MOV     R2,#HIGH task2
0037 7900        R     MOV     R1,#LOW task2
0039 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 106
003C 120000      E     LCALL   os_start
003F         ?C0010:
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 112
003F 80FE              SJMP    ?C0010
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
