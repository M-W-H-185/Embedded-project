C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5_C51\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTE
                    -XTEND CODE PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          void Delay500ms(void) //@11.0592MHz
  18          {
  19   1        unsigned char data i, j, k;
  20   1      
  21   1        _nop_();
  22   1        _nop_();
  23   1        i = 22;
  24   1        j = 3;
  25   1        k = 227;
  26   1        do
  27   1        {
  28   2          do
  29   2          {
  30   3            while (--k);
  31   3          } while (--j);
  32   2        } while (--i);
  33   1      }
  34          
  35          
  36          
  37          typedef     unsigned char    os_uint8_t;  //  8 bits 
  38          
  39          typedef     unsigned int     os_uint16_t; // 16 bits 
  40          
  41          typedef     unsigned long    os_uint32_t; // 32 bits 
  42          enum OS_TASK_STATUS_TYPE
  43          {
  44            OS_READY      = 1,  // 就绪态
  45            OS_RUNING     = 2,  // 运行态
  46            OS_BLOCKED    = 3,  // 阻塞态
  47            OS_SUSPENDED  = 4 // 停止态
  48          
  49          };
  50          
  51          // 任务控制块
  52          typedef struct os_tcb_t
  53          {
  54              os_uint8_t  sp;              // sp 堆栈指针存储
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 2   

  55              os_uint32_t delay_tick;      // 延时滴答数
  56              os_uint8_t  os_status_type;  // 任务状态
  57              os_uint8_t  test_value;      // 测试变量
  58          } os_tcb_t;
  59          
  60           
  61          #define MAX_TASKS 5       /*任务槽个数.必须和实际任务数一至*/
  62          #define MAX_TASK_DEP 20   /*最大栈深.最低不得少于2个,保守值为12*/
  63          unsigned int task_id;    /*当前活动任务号*/
  64          unsigned int max_task = 0;
  65           
  66          
  67           
  68          extern void test(void);
  69           
  70          
  71          // 任务控制列表
  72          struct os_tcb_t idata tcb_list[MAX_TASKS];
  73          // 任务堆栈区
  74          os_uint8_t idata task_idle_stack[MAX_TASK_DEP];   /*空闲任务堆栈.*/
  75          os_uint8_t idata task_stack1[MAX_TASK_DEP];     /*任务1堆栈.*/
  76          os_uint8_t idata task_stack2[MAX_TASK_DEP];     /*任务2堆栈.*/
  77          // 任务堆栈区
  78          
  79          // 任务切换函数
  80          void OSCtxSw()
  81          {
  82   1        os_uint8_t  ost_i = 0;
  83   1      
  84   1        tcb_list[task_id].sp = SP;
  85   1        // 找出就绪态的一个id
  86   1        for(ost_i = 0; ost_i < max_task; ost_i++)
  87   1        {
  88   2          if(tcb_list[ost_i].os_status_type == OS_READY)
  89   2          {
  90   3            task_id = ost_i;
  91   3            continue;
  92   3      
  93   3          }
  94   2        }
  95   1        
  96   1        
  97   1        if(task_id == max_task)
  98   1        {
  99   2          task_id = 0;
 100   2        }
 101   1      
 102   1      
 103   1      }
 104           
 105          void os_task_create(void(*task)(void) ,os_uint8_t *tstack,int tid)
 106          {
 107   1      
 108   1        tstack[0] = (unsigned int)task & 0xff;
 109   1        tstack[1] = (unsigned int)task >> 8;
 110   1      
 111   1        tcb_list[tid].sp        = tstack+1;
*** WARNING C260 IN LINE 111 OF main.c: '=': pointer truncation
 112   1        tcb_list[tid].os_status_type  = OS_READY;
 113   1      
 114   1        max_task++;
 115   1      }
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 3   

 116          void os_idle_task(void);
 117          
 118          void os_start()
 119          {
 120   1        // 装载空闲任务
 121   1        os_task_create(os_idle_task, &task_idle_stack, 0);//将task1函数装入0号槽
 122   1      
 123   1        task_id = 0;
 124   1        SP = tcb_list[task_id].sp;  
 125   1        return;
 126   1      }
 127          
 128          // 任务延时函数
 129          void os_delay(os_uint32_t tasks)
 130          { 
 131   1        if(tasks > 0)
 132   1        {
 133   2          // 设置延时滴答数
 134   2          tcb_list[task_id].delay_tick   =  tasks;
 135   2          // 将任务设置为阻塞态
 136   2          tcb_list[task_id].os_status_type =  OS_BLOCKED;
 137   2          // 只要任务延时了，就马上切换出去
 138   2          OSCtxSw();  
 139   2        }
 140   1      
 141   1        
 142   1      }
 143          os_uint8_t idle_cut = 0;
 144          // 空闲函数
 145          void os_idle_task(void)
 146          {
 147   1        LED_R = 1;
 148   1      
 149   1        while(1)
 150   1        {
 151   2          idle_cut = 1 + 1;
 152   2          LED_R = 0;
 153   2          Delay500ms();
 154   2      
 155   2          LED_R = 1;
 156   2          Delay500ms();
 157   2      
 158   2        }
 159   1      }
 160          
 161          void task1()
 162          {
 163   1        while(1)
 164   1        {
 165   2      //    LED_R = 1;
 166   2      //    os_delay(100);
 167   2      
 168   2      //    LED_R = 0;
 169   2      //    os_delay(100);
 170   2      //    
 171   2      //    LED_R = 1;
 172   2      //    os_delay(100);
 173   2      
 174   2        }
 175   1      }
 176          
 177          void task2()
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 4   

 178          {
 179   1      
 180   1        while(1)
 181   1        {
 182   2      //    LED_Y = 1;
 183   2      //    os_delay(1000);
 184   2      //    
 185   2      //    LED_Y = 0;
 186   2      //    os_delay(1000);
 187   2        }
 188   1      }
 189          
 190          
 191          unsigned int cut = 0;
 192          
 193          void time0_handle(void)large reentrant
 194          //void time0_handle(void)interrupt 1
 195          {
 196   1        os_uint8_t ti = 0;
 197   1        cut++;
 198   1      
 199   1        if(cut == 500)
 200   1        {
 201   2          cut = 0;
 202   2          LED_G = !LED_G;
 203   2        }
 204   1        // 在这里处理遍历延时
 205   1        for(ti = 0; ti < max_task; ti++)
 206   1        {
 207   2          if(tcb_list[ti].os_status_type != OS_BLOCKED)
 208   2          {
 209   3            continue;
 210   3          }
 211   2          // 设置延时滴答数
 212   2          if((tcb_list[ti].delay_tick - 1) == 0)
 213   2          {
 214   3            tcb_list[ti].delay_tick = 0;
 215   3            // 将任务设置为阻塞态
 216   3            tcb_list[ti].os_status_type = OS_READY;
 217   3            continue;
 218   3          }
 219   2          tcb_list[ti].delay_tick--;
 220   2        }
 221   1      
 222   1        ti = 0;
 223   1        
 224   1      }
 225          
 226          void Timer0_Init(void)    //1毫秒@11.0592MHz
 227          {
 228   1        AUXR |= 0x80;     //定时器时钟1T模式
 229   1        TMOD &= 0xF0;     //设置定时器模式
 230   1        TL0 = 0xCD;       //设置定时初始值
 231   1        TH0 = 0xD4;       //设置定时初始值
 232   1        TF0 = 0;        //清除TF0标志
 233   1        TR0 = 1;        //定时器0开始计时
 234   1        ET0 = 1;        //使能定时器0中断
 235   1      }
 236          
 237          /* 主函数 */
 238          void main()
 239          {
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 5   

 240   1        P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 241   1        P0M1 = 0x00;
 242   1        Timer0_Init();
 243   1        EA = 1;
 244   1        //  P_SW2 |= (1<<7);
 245   1        tcb_list[0].sp = 0x01;
 246   1        test();
 247   1      
 248   1      
 249   1        
 250   1        os_task_create(task1, &task_stack1, 1);//将task1函数装入0号槽
 251   1        os_task_create(task2, &task_stack2, 2);//将task2函数装入1号槽
 252   1        
 253   1      
 254   1        
 255   1        os_start();
 256   1      
 257   1      
 258   1        while(1)
 259   1        {
 260   2      
 261   2        }
 262   1        
 263   1      
 264   1      }
 265          
 266          
 267          
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Delay500ms (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 21
0000 00                NOP     
                                           ; SOURCE LINE # 22
0001 00                NOP     
                                           ; SOURCE LINE # 23
0002 750016      R     MOV     i,#016H
                                           ; SOURCE LINE # 24
0005 750003      R     MOV     j,#03H
                                           ; SOURCE LINE # 25
0008 7500E3      R     MOV     k,#0E3H
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 29
000B         ?C0007:
                                           ; SOURCE LINE # 30
000B D500FD      R     DJNZ    k,?C0007
                                           ; SOURCE LINE # 31
000E D500FA      R     DJNZ    j,?C0007
                                           ; SOURCE LINE # 32
0011 D500F7      R     DJNZ    i,?C0007
                                           ; SOURCE LINE # 33
0014 22                RET     
             ; FUNCTION Delay500ms (END)

             ; FUNCTION OSCtxSw (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
;---- Variable 'ost_i' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 84
0002 900000      R     MOV     DPTR,#task_id
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 75F007            MOV     B,#07H
000A A4                MUL     AB
000B 2400        R     ADD     A,#LOW tcb_list
000D F8                MOV     R0,A
000E A681              MOV     @R0,SP
                                           ; SOURCE LINE # 86
0010         ?C0010:
0010 EF                MOV     A,R7
0011 FD                MOV     R5,A
0012 D3                SETB    C
0013 900000      R     MOV     DPTR,#max_task+01H
0016 E0                MOVX    A,@DPTR
0017 9D                SUBB    A,R5
0018 900000      R     MOV     DPTR,#max_task
001B E0                MOVX    A,@DPTR
001C 9400              SUBB    A,#00H
001E 4018              JC      ?C0011
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
0020 EF                MOV     A,R7
0021 75F007            MOV     B,#07H
0024 A4                MUL     AB
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 7   

0025 2400        R     ADD     A,#LOW tcb_list+05H
0027 F8                MOV     R0,A
0028 E6                MOV     A,@R0
0029 6401              XRL     A,#01H
002B 7008              JNZ     ?C0012
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
002D 900000      R     MOV     DPTR,#task_id
0030 E4                CLR     A
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 ED                MOV     A,R5
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
0035         ?C0012:
0035 0F                INC     R7
0036 80D8              SJMP    ?C0010
0038         ?C0011:
                                           ; SOURCE LINE # 97
0038 900000      R     MOV     DPTR,#max_task
003B E0                MOVX    A,@DPTR
003C FE                MOV     R6,A
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 A3                INC     DPTR
0041 E0                MOVX    A,@DPTR
0042 B5060C            CJNE    A,AR6,?C0015
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 B50707            CJNE    A,AR7,?C0015
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
004A E4                CLR     A
004B 900000      R     MOV     DPTR,#task_id
004E F0                MOVX    @DPTR,A
004F A3                INC     DPTR
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 103
0051         ?C0015:
0051 22                RET     
             ; FUNCTION OSCtxSw (END)

             ; FUNCTION _os_task_create (BEGIN)
                                           ; SOURCE LINE # 105
0000 900000      R     MOV     DPTR,#task
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
000B 900000      R     MOV     DPTR,#task
000E A3                INC     DPTR
000F A3                INC     DPTR
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 8   

0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B EF                MOV     A,R7
001C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 109
001F 900000      R     MOV     DPTR,#task
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FA                MOV     R2,A
0025 A3                INC     DPTR
0026 EA                MOV     A,R2
0027 FF                MOV     R7,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 900001            MOV     DPTR,#01H
0034 EF                MOV     A,R7
0035 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 111
0038 E9                MOV     A,R1
0039 2401              ADD     A,#01H
003B F9                MOV     R1,A
003C 900000      R     MOV     DPTR,#tid
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 75F007            MOV     B,#07H
0045 A4                MUL     AB
0046 2400        R     ADD     A,#LOW tcb_list
0048 F8                MOV     R0,A
0049 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 112
004B EE                MOV     A,R6
004C 75F007            MOV     B,#07H
004F A4                MUL     AB
0050 2400        R     ADD     A,#LOW tcb_list+05H
0052 F8                MOV     R0,A
0053 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 114
0055 900000      R     MOV     DPTR,#max_task+01H
0058 E0                MOVX    A,@DPTR
0059 04                INC     A
005A F0                MOVX    @DPTR,A
005B 7006              JNZ     ?C0041
005D 900000      R     MOV     DPTR,#max_task
0060 E0                MOVX    A,@DPTR
0061 04                INC     A
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 9   

0062 F0                MOVX    @DPTR,A
0063         ?C0041:
                                           ; SOURCE LINE # 115
0063 22                RET     
             ; FUNCTION _os_task_create (END)

             ; FUNCTION os_start (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 121
0000 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 7400        R     MOV     A,#HIGH task_idle_stack
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A 7400        R     MOV     A,#LOW task_idle_stack
000C F0                MOVX    @DPTR,A
000D E4                CLR     A
000E A3                INC     DPTR
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 F0                MOVX    @DPTR,A
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH os_idle_task
0016 7900        R     MOV     R1,#LOW os_idle_task
0018 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 123
001B E4                CLR     A
001C 900000      R     MOV     DPTR,#task_id
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
0022 900000      R     MOV     DPTR,#task_id
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 75F007            MOV     B,#07H
002A A4                MUL     AB
002B 2400        R     ADD     A,#LOW tcb_list
002D F8                MOV     R0,A
002E E6                MOV     A,@R0
002F F581              MOV     SP,A
                                           ; SOURCE LINE # 126
0031 22                RET     
             ; FUNCTION os_start (END)

             ; FUNCTION _os_delay (BEGIN)
                                           ; SOURCE LINE # 129
0000 900000      R     MOV     DPTR,#tasks
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#tasks
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 10  

0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 D3                SETB    C
001A 120000      E     LCALL   ?C?ULCMP
001D 402B              JC      ?C0019
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 134
001F 900000      R     MOV     DPTR,#tasks
0022 E0                MOVX    A,@DPTR
0023 FC                MOV     R4,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 FD                MOV     R5,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 FE                MOV     R6,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 900000      R     MOV     DPTR,#task_id
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FB                MOV     R3,A
0033 75F007            MOV     B,#07H
0036 A4                MUL     AB
0037 2400        R     ADD     A,#LOW tcb_list+01H
0039 F8                MOV     R0,A
003A 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 136
003D EB                MOV     A,R3
003E 75F007            MOV     B,#07H
0041 A4                MUL     AB
0042 2400        R     ADD     A,#LOW tcb_list+05H
0044 F8                MOV     R0,A
0045 7603              MOV     @R0,#03H
                                           ; SOURCE LINE # 138
0047 120000      R     LCALL   OSCtxSw
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 142
004A         ?C0019:
004A 22                RET     
             ; FUNCTION _os_delay (END)

             ; FUNCTION os_idle_task (BEGIN)
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
0000 D285              SETB    LED_R
0002         ?C0020:
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0002 900000      R     MOV     DPTR,#idle_cut
0005 7402              MOV     A,#02H
0007 F0                MOVX    @DPTR,A
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 11  

                                           ; SOURCE LINE # 152
0008 C285              CLR     LED_R
                                           ; SOURCE LINE # 153
000A 120000      R     LCALL   Delay500ms
                                           ; SOURCE LINE # 155
000D D285              SETB    LED_R
                                           ; SOURCE LINE # 156
000F 120000      R     LCALL   Delay500ms
                                           ; SOURCE LINE # 158
0012 80EE              SJMP    ?C0020
             ; FUNCTION os_idle_task (END)

             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0000         ?C0023:
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 174
0000 80FE              SJMP    ?C0023
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
0000         ?C0026:
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 187
0000 80FE              SJMP    ?C0026
             ; FUNCTION task2 (END)

             ; FUNCTION _?time0_handle (BEGIN)
                                           ; SOURCE LINE # 193
0000 90FFFF            MOV     DPTR,#0FFFFH
0003 120000      E     LCALL   ?C?ADDXBP
                                           ; SOURCE LINE # 196
0006 850083      E     MOV     DPH,?C_XBP
0009 850082      E     MOV     DPL,?C_XBP+01H
000C E4                CLR     A
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
000E 900000      R     MOV     DPTR,#cut+01H
0011 E0                MOVX    A,@DPTR
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
0014 7006              JNZ     ?C0042
0016 900000      R     MOV     DPTR,#cut
0019 E0                MOVX    A,@DPTR
001A 04                INC     A
001B F0                MOVX    @DPTR,A
001C         ?C0042:
                                           ; SOURCE LINE # 199
001C 900000      R     MOV     DPTR,#cut
001F E0                MOVX    A,@DPTR
0020 B4010E            CJNE    A,#01H,?C0029
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 B4F409            CJNE    A,#0F4H,?C0029
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
0028 E4                CLR     A
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 12  

0029 900000      R     MOV     DPTR,#cut
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
002F B287              CPL     LED_G
                                           ; SOURCE LINE # 203
0031         ?C0029:
                                           ; SOURCE LINE # 205
0031 850083      E     MOV     DPH,?C_XBP
0034 850082      E     MOV     DPL,?C_XBP+01H
0037 E4                CLR     A
0038 F0                MOVX    @DPTR,A
0039         ?C0030:
0039 850083      E     MOV     DPH,?C_XBP
003C 850082      E     MOV     DPL,?C_XBP+01H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 FD                MOV     R5,A
0042 D3                SETB    C
0043 900000      R     MOV     DPTR,#max_task+01H
0046 E0                MOVX    A,@DPTR
0047 9D                SUBB    A,R5
0048 900000      R     MOV     DPTR,#max_task
004B E0                MOVX    A,@DPTR
004C 9400              SUBB    A,#00H
004E 5003              JNC     $ + 5H
0050 020000      R     LJMP    ?C0031
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 207
0053 EF                MOV     A,R7
0054 75F007            MOV     B,#07H
0057 A4                MUL     AB
0058 2400        R     ADD     A,#LOW tcb_list+05H
005A F8                MOV     R0,A
005B E6                MOV     A,@R0
005C 6403              XRL     A,#03H
005E 707B              JNZ     ?C0032
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
                                           ; SOURCE LINE # 212
0060 850083      E     MOV     DPH,?C_XBP
0063 850082      E     MOV     DPL,?C_XBP+01H
0066 E0                MOVX    A,@DPTR
0067 75F007            MOV     B,#07H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW tcb_list+01H
006D F8                MOV     R0,A
006E 120000      E     LCALL   ?C?LLDIDATA
0071 EF                MOV     A,R7
0072 24FF              ADD     A,#0FFH
0074 FF                MOV     R7,A
0075 EE                MOV     A,R6
0076 34FF              ADDC    A,#0FFH
0078 FE                MOV     R6,A
0079 ED                MOV     A,R5
007A 34FF              ADDC    A,#0FFH
007C FD                MOV     R5,A
007D EC                MOV     A,R4
007E 34FF              ADDC    A,#0FFH
0080 FC                MOV     R4,A
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 13  

0081 E4                CLR     A
0082 FB                MOV     R3,A
0083 FA                MOV     R2,A
0084 F9                MOV     R1,A
0085 F8                MOV     R0,A
0086 C3                CLR     C
0087 120000      E     LCALL   ?C?ULCMP
008A 7022              JNZ     ?C0034
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
008C 850083      E     MOV     DPH,?C_XBP
008F 850082      E     MOV     DPL,?C_XBP+01H
0092 E0                MOVX    A,@DPTR
0093 FB                MOV     R3,A
0094 75F007            MOV     B,#07H
0097 A4                MUL     AB
0098 2400        R     ADD     A,#LOW tcb_list+01H
009A F8                MOV     R0,A
009B 120000      E     LCALL   ?C?LSTKIDATA
009E 00                DB      00H
009F 00                DB      00H
00A0 00                DB      00H
00A1 00                DB      00H
                                           ; SOURCE LINE # 216
00A2 EB                MOV     A,R3
00A3 75F007            MOV     B,#07H
00A6 A4                MUL     AB
00A7 2400        R     ADD     A,#LOW tcb_list+05H
00A9 F8                MOV     R0,A
00AA 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 217
00AC 802D              SJMP    ?C0032
                                           ; SOURCE LINE # 218
00AE         ?C0034:
                                           ; SOURCE LINE # 219
00AE 850083      E     MOV     DPH,?C_XBP
00B1 850082      E     MOV     DPL,?C_XBP+01H
00B4 E0                MOVX    A,@DPTR
00B5 FB                MOV     R3,A
00B6 75F007            MOV     B,#07H
00B9 A4                MUL     AB
00BA 2400        R     ADD     A,#LOW tcb_list+01H
00BC F8                MOV     R0,A
00BD 120000      E     LCALL   ?C?LLDIDATA
00C0 EF                MOV     A,R7
00C1 24FF              ADD     A,#0FFH
00C3 FF                MOV     R7,A
00C4 EE                MOV     A,R6
00C5 34FF              ADDC    A,#0FFH
00C7 FE                MOV     R6,A
00C8 ED                MOV     A,R5
00C9 34FF              ADDC    A,#0FFH
00CB FD                MOV     R5,A
00CC EC                MOV     A,R4
00CD 34FF              ADDC    A,#0FFH
00CF FC                MOV     R4,A
00D0 EB                MOV     A,R3
00D1 75F007            MOV     B,#07H
00D4 A4                MUL     AB
00D5 2400        R     ADD     A,#LOW tcb_list+01H
00D7 F8                MOV     R0,A
00D8 120000      E     LCALL   ?C?LSTIDATA
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 14  

                                           ; SOURCE LINE # 220
00DB         ?C0032:
00DB 850083      E     MOV     DPH,?C_XBP
00DE 850082      E     MOV     DPL,?C_XBP+01H
00E1 E0                MOVX    A,@DPTR
00E2 04                INC     A
00E3 F0                MOVX    @DPTR,A
00E4 020000      R     LJMP    ?C0030
00E7         ?C0031:
                                           ; SOURCE LINE # 222
00E7 850083      E     MOV     DPH,?C_XBP
00EA 850082      E     MOV     DPL,?C_XBP+01H
00ED E4                CLR     A
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
00EF 900001            MOV     DPTR,#01H
00F2 020000      E     LJMP    ?C?ADDXBP
             ; FUNCTION _?time0_handle (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 226
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 229
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 230
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 231
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 232
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 233
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 234
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 235
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 241
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 242
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 243
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 245
000A 7800        R     MOV     R0,#LOW tcb_list
000C 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 246
000E 120000      E     LCALL   test
                                           ; SOURCE LINE # 250
0011 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
0016 A3                INC     DPTR
C51 COMPILER V9.59.0.0   MAIN                                                              12/25/2023 22:42:38 PAGE 15  

0017 7400        R     MOV     A,#HIGH task_stack1
0019 F0                MOVX    @DPTR,A
001A A3                INC     DPTR
001B 7400        R     MOV     A,#LOW task_stack1
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F E4                CLR     A
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 04                INC     A
0023 F0                MOVX    @DPTR,A
0024 7BFF              MOV     R3,#0FFH
0026 7A00        R     MOV     R2,#HIGH task1
0028 7900        R     MOV     R1,#LOW task1
002A 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 251
002D 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0030 E4                CLR     A
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 7400        R     MOV     A,#HIGH task_stack2
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 7400        R     MOV     A,#LOW task_stack2
0039 F0                MOVX    @DPTR,A
003A A3                INC     DPTR
003B E4                CLR     A
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E 7402              MOV     A,#02H
0040 F0                MOVX    @DPTR,A
0041 7BFF              MOV     R3,#0FFH
0043 7A00        R     MOV     R2,#HIGH task2
0045 7900        R     MOV     R1,#LOW task2
0047 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 255
004A 120000      R     LCALL   os_start
004D         ?C0037:
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 261
004D 80FE              SJMP    ?C0037
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    695    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =     95    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
