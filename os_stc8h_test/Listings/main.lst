C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTEXTEN
                    -D CODE PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

*** WARNING C500 IN LINE 1 OF main.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          
  18          typedef     unsigned char    os_uint8_t;        //  8 bits 
  19          
  20          typedef     unsigned int     os_uint16_t;       // 16 bits 
  21          
  22          typedef     unsigned long    os_uint32_t;       // 32 bits 
  23          enum OS_TASK_STATUS_TYPE
  24          {
  25                  OS_READY      = 1,      // 就绪态
  26                  OS_RUNING     = 2,      // 运行态
  27                  OS_BLOCKED    = 3,      // 阻塞态
  28                  OS_SUSPENDED  = 4       // 停止态
  29          
  30          };
  31          
  32          // 任务控制块
  33          typedef struct os_tcb_t
  34          {
  35                  os_uint8_t                      sp;                                     // sp 堆栈指针存储
  36                  os_uint32_t             delay_tick;                     // 延时滴答数
  37                  os_uint8_t                      os_status_type;         // 任务状态
  38          };
  39          
  40           
  41          #define MAX_TASKS 5       /*任务槽个数.必须和实际任务数一至*/
  42          #define MAX_TASK_DEP 20   /*最大栈深.最低不得少于2个,保守值为12*/
  43          unsigned int task_id;    /*当前活动任务号*/
  44          unsigned int max_task = 0;
  45           
  46          
  47           
  48           
  49          
  50          // 任务控制列表
  51          struct os_tcb_t idata tcb_list[MAX_TASKS];
  52          // 任务堆栈区
  53          os_uint8_t idata task_idle_stack[MAX_TASK_DEP];         /*空闲任务堆栈.*/
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 2   

  54          os_uint8_t idata task_stack1[MAX_TASK_DEP];                     /*任务1堆栈.*/
  55          os_uint8_t idata task_stack2[MAX_TASK_DEP];                     /*任务2堆栈.*/
  56          // 任务堆栈区
  57          
  58          // 任务切换函数
  59          void OSCtxSw()
  60          {
  61   1              os_uint8_t  ost_i = 0;
  62   1              if(SP == tcb_list[0].sp)
  63   1              {
  64   2                      ost_i = 1;
  65   2              }
  66   1              else if(SP == tcb_list[1].sp)
  67   1              {
  68   2                      ost_i = 2;
  69   2              }
  70   1              else if(SP == tcb_list[2].sp)
  71   1              {
  72   2                      ost_i = 3;
  73   2              }
  74   1              
  75   1              tcb_list[task_id].sp = SP;
  76   1              // 找出就绪态的一个id
  77   1              for(ost_i = 0; ost_i < max_task; ost_i++)
  78   1              {
  79   2                      if(tcb_list[ost_i].os_status_type == OS_READY)
  80   2                      {
  81   3                              task_id = ost_i;
  82   3                              continue;
  83   3      
  84   3                      }
  85   2              }
  86   1              
  87   1              
  88   1          if(task_id == max_task)
  89   1              {
  90   2                      task_id = 0;
  91   2              }
  92   1      
  93   1          SP = tcb_list[task_id].sp;
  94   1      
  95   1      }
  96           
  97          void os_task_create(void(*task)(void) ,os_uint8_t *tstack,int tid)
  98          {
  99   1      
 100   1              tstack[0] = (unsigned int)task & 0xff;
 101   1              tstack[1] = (unsigned int)task >> 8;
 102   1      
 103   1              tcb_list[tid].sp                                = tstack+1;
*** WARNING C260 IN LINE 103 OF main.c: '=': pointer truncation
 104   1              tcb_list[tid].os_status_type    = OS_READY;
 105   1      
 106   1              max_task++;
 107   1      }
 108          void os_idle_task(void);
 109          
 110          void os_start()
 111          {
 112   1              // 装载空闲任务
 113   1              os_task_create(os_idle_task, &task_idle_stack, 0);//将task1函数装入0号槽
 114   1      
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 3   

 115   1              task_id = 0;
 116   1              SP = tcb_list[task_id].sp;  
 117   1              return;
 118   1      }
 119          
 120          // 任务延时函数
 121          void os_delay(os_uint32_t tasks)
 122          {       
 123   1              
 124   1              // 设置延时滴答数
 125   1              tcb_list[task_id].delay_tick     =      tasks;
 126   1              // 将任务设置为阻塞态
 127   1              tcb_list[task_id].os_status_type =      OS_BLOCKED;
 128   1              // 只要任务延时了，就马上切换出去
 129   1              OSCtxSw();
 130   1              
 131   1      }
 132          // 空闲函数
 133          void os_idle_task(void)
 134          {
 135   1              while(1)
 136   1              {
 137   2                      OSCtxSw();
 138   2              }
 139   1      }
 140          
 141          void task1()
 142          {
 143   1              while(1)
 144   1              {
 145   2                      LED_R = 1;
 146   2                      os_delay(100);
 147   2      
 148   2                      LED_R = 0;
 149   2                      os_delay(100);
 150   2                      
 151   2                      LED_R = 1;
 152   2                      os_delay(100);
 153   2      
 154   2              }
 155   1      }
 156          
 157          void task2()
 158          {
 159   1      
 160   1              while(1)
 161   1              {
 162   2                      LED_Y = 1;
 163   2                      os_delay(1000);
 164   2                      
 165   2                      LED_Y = 0;
 166   2                      os_delay(1000);
 167   2              }
 168   1      }
 169          
 170          
 171          unsigned int cut = 0;
 172          
 173          void Timer0_Isr(void) interrupt 1
 174          {
 175   1              os_uint8_t ti = 0;
 176   1              cut++;
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 4   

 177   1      
 178   1              if(cut == 500)
 179   1              {
 180   2                      cut = 0;
 181   2                      LED_G = !LED_G;
 182   2              }
 183   1              // 在这里处理遍历延时
 184   1              for(ti = 0; ti<max_task; ti++)
 185   1              {
 186   2                      if(tcb_list[ti].os_status_type != OS_BLOCKED)
 187   2                      {
 188   3                              continue;
 189   3                      }
 190   2                      // 设置延时滴答数
 191   2                      if((tcb_list[ti].delay_tick - 1) == 0)
 192   2                      {
 193   3                              tcb_list[ti].delay_tick = 0;
 194   3                              // 将任务设置为阻塞态
 195   3                              tcb_list[ti].os_status_type = OS_READY;
 196   3                              continue;
 197   3                      }
 198   2                      tcb_list[ti].delay_tick--;
 199   2              }
 200   1      
 201   1              
 202   1      }
 203          
 204          void Timer0_Init(void)          //1毫秒@11.0592MHz
 205          {
 206   1              AUXR |= 0x80;                   //定时器时钟1T模式
 207   1              TMOD &= 0xF0;                   //设置定时器模式
 208   1              TL0 = 0xCD;                             //设置定时初始值
 209   1              TH0 = 0xD4;                             //设置定时初始值
 210   1              TF0 = 0;                                //清除TF0标志
 211   1              TR0 = 1;                                //定时器0开始计时
 212   1              ET0 = 1;                                //使能定时器0中断
 213   1      }
 214          
 215          /* 主函数 */
 216          void main()
 217          {
 218   1              P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 219   1              P0M1 = 0x00;
 220   1              Timer0_Init();
 221   1              EA = 1;
 222   1              P_SW2 |= (1<<7);
 223   1              
 224   1              
 225   1              os_task_create(task1, &task_stack1, 1);//将task1函数装入0号槽
 226   1              os_task_create(task2, &task_stack2, 2);//将task2函数装入1号槽
 227   1              os_start();
 228   1      
 229   1      
 230   1              while(1)
 231   1              {
 232   2      
 233   2              }
 234   1              
 235   1      
 236   1      }
 237          
 238          
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 5   

 239          
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION OSCtxSw (BEGIN)
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
;---- Variable 'ost_i' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 62
0000 E581              MOV     A,SP
0002 7800        R     MOV     R0,#LOW tcb_list
0004 66                XRL     A,@R0
0005 7002              JNZ     ?C0001
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0007 800E              SJMP    ?C0002
0009         ?C0001:
                                           ; SOURCE LINE # 66
0009 E581              MOV     A,SP
000B 7800        R     MOV     R0,#LOW tcb_list+06H
000D 66                XRL     A,@R0
000E 7002              JNZ     ?C0003
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0010 8005              SJMP    ?C0002
0012         ?C0003:
                                           ; SOURCE LINE # 70
0012 E581              MOV     A,SP
0014 7800        R     MOV     R0,#LOW tcb_list+0CH
0016 66                XRL     A,@R0
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
0017         ?C0002:
                                           ; SOURCE LINE # 75
0017 900000      R     MOV     DPTR,#task_id
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C 75F006            MOV     B,#06H
001F A4                MUL     AB
0020 2400        R     ADD     A,#LOW tcb_list
0022 F8                MOV     R0,A
0023 A681              MOV     @R0,SP
                                           ; SOURCE LINE # 77
0025 E4                CLR     A
0026 FF                MOV     R7,A
0027         ?C0006:
0027 EF                MOV     A,R7
0028 FD                MOV     R5,A
0029 D3                SETB    C
002A 900000      R     MOV     DPTR,#max_task+01H
002D E0                MOVX    A,@DPTR
002E 9D                SUBB    A,R5
002F 900000      R     MOV     DPTR,#max_task
0032 E0                MOVX    A,@DPTR
0033 9400              SUBB    A,#00H
0035 4017              JC      ?C0007
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0037 EF                MOV     A,R7
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 7   

0038 75F006            MOV     B,#06H
003B A4                MUL     AB
003C 2400        R     ADD     A,#LOW tcb_list+05H
003E F8                MOV     R0,A
003F E6                MOV     A,@R0
0040 B40108            CJNE    A,#01H,?C0008
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0043 900000      R     MOV     DPTR,#task_id
0046 E4                CLR     A
0047 F0                MOVX    @DPTR,A
0048 A3                INC     DPTR
0049 ED                MOV     A,R5
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
004B         ?C0008:
004B 0F                INC     R7
004C 80D9              SJMP    ?C0006
004E         ?C0007:
                                           ; SOURCE LINE # 88
004E 900000      R     MOV     DPTR,#max_task
0051 E0                MOVX    A,@DPTR
0052 FE                MOV     R6,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 B5060C            CJNE    A,AR6,?C0010
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D B50707            CJNE    A,AR7,?C0010
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0060 E4                CLR     A
0061 900000      R     MOV     DPTR,#task_id
0064 F0                MOVX    @DPTR,A
0065 A3                INC     DPTR
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0067         ?C0010:
                                           ; SOURCE LINE # 93
0067 900000      R     MOV     DPTR,#task_id
006A A3                INC     DPTR
006B E0                MOVX    A,@DPTR
006C 75F006            MOV     B,#06H
006F A4                MUL     AB
0070 2400        R     ADD     A,#LOW tcb_list
0072 F8                MOV     R0,A
0073 E6                MOV     A,@R0
0074 F581              MOV     SP,A
                                           ; SOURCE LINE # 95
0076 22                RET     
             ; FUNCTION OSCtxSw (END)

             ; FUNCTION _os_task_create (BEGIN)
                                           ; SOURCE LINE # 97
0000 900000      R     MOV     DPTR,#task
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 8   

0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 100
000B 900000      R     MOV     DPTR,#task
000E A3                INC     DPTR
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B EF                MOV     A,R7
001C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 101
001F 900000      R     MOV     DPTR,#task
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FA                MOV     R2,A
0025 A3                INC     DPTR
0026 EA                MOV     A,R2
0027 FF                MOV     R7,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 900001            MOV     DPTR,#01H
0034 EF                MOV     A,R7
0035 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 103
0038 E9                MOV     A,R1
0039 2401              ADD     A,#01H
003B F9                MOV     R1,A
003C 900000      R     MOV     DPTR,#tid
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 75F006            MOV     B,#06H
0045 A4                MUL     AB
0046 2400        R     ADD     A,#LOW tcb_list
0048 F8                MOV     R0,A
0049 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 104
004B EE                MOV     A,R6
004C 75F006            MOV     B,#06H
004F A4                MUL     AB
0050 2400        R     ADD     A,#LOW tcb_list+05H
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 9   

0052 F8                MOV     R0,A
0053 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 106
0055 900000      R     MOV     DPTR,#max_task+01H
0058 E0                MOVX    A,@DPTR
0059 04                INC     A
005A F0                MOVX    @DPTR,A
005B 7006              JNZ     ?C0036
005D 900000      R     MOV     DPTR,#max_task
0060 E0                MOVX    A,@DPTR
0061 04                INC     A
0062 F0                MOVX    @DPTR,A
0063         ?C0036:
                                           ; SOURCE LINE # 107
0063 22                RET     
             ; FUNCTION _os_task_create (END)

             ; FUNCTION os_start (BEGIN)
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
0000 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 7400        R     MOV     A,#HIGH task_idle_stack
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A 7400        R     MOV     A,#LOW task_idle_stack
000C F0                MOVX    @DPTR,A
000D E4                CLR     A
000E A3                INC     DPTR
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 F0                MOVX    @DPTR,A
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH os_idle_task
0016 7900        R     MOV     R1,#LOW os_idle_task
0018 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 115
001B E4                CLR     A
001C 900000      R     MOV     DPTR,#task_id
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
0022 900000      R     MOV     DPTR,#task_id
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 75F006            MOV     B,#06H
002A A4                MUL     AB
002B 2400        R     ADD     A,#LOW tcb_list
002D F8                MOV     R0,A
002E E6                MOV     A,@R0
002F F581              MOV     SP,A
                                           ; SOURCE LINE # 118
0031 22                RET     
             ; FUNCTION os_start (END)

             ; FUNCTION L?0039 (BEGIN)
0000 D285              SETB    LED_R
0002         L?0040:
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 10  

0002 7F64              MOV     R7,#064H
0004 7E00              MOV     R6,#00H
0006         L?0041:
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
             ; FUNCTION _os_delay (BEGIN)
                                           ; SOURCE LINE # 121
;---- Variable 'tasks' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 125
000A 900000      R     MOV     DPTR,#task_id
000D A3                INC     DPTR
000E E0                MOVX    A,@DPTR
000F FB                MOV     R3,A
0010 75F006            MOV     B,#06H
0013 A4                MUL     AB
0014 2400        R     ADD     A,#LOW tcb_list+01H
0016 F8                MOV     R0,A
0017 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 127
001A EB                MOV     A,R3
001B 75F006            MOV     B,#06H
001E A4                MUL     AB
001F 2400        R     ADD     A,#LOW tcb_list+05H
0021 F8                MOV     R0,A
0022 7603              MOV     @R0,#03H
                                           ; SOURCE LINE # 129
0024 020000      R     LJMP    OSCtxSw
             ; FUNCTION _os_delay (END)

             ; FUNCTION os_idle_task (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
0000         ?C0015:
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
0000 120000      R     LCALL   OSCtxSw
                                           ; SOURCE LINE # 138
0003 80FB              SJMP    ?C0015
             ; FUNCTION os_idle_task (END)

             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
0000         ?C0018:
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
0000 120000      R     LCALL   L?0039
                                           ; SOURCE LINE # 148
0003 C285              CLR     LED_R
                                           ; SOURCE LINE # 149
0005 120000      R     LCALL   L?0040
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
0008 120000      R     LCALL   L?0039
                                           ; SOURCE LINE # 154
000B 80F3              SJMP    ?C0018
             ; FUNCTION task1 (END)

C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 11  

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0000         ?C0021:
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
                                           ; SOURCE LINE # 162
0000 D286              SETB    LED_Y
                                           ; SOURCE LINE # 163
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 120000      R     LCALL   L?0041
                                           ; SOURCE LINE # 165
0009 C286              CLR     LED_Y
                                           ; SOURCE LINE # 166
000B 7FE8              MOV     R7,#0E8H
000D 7E03              MOV     R6,#03H
000F 120000      R     LCALL   L?0041
                                           ; SOURCE LINE # 167
0012 80EC              SJMP    ?C0021
             ; FUNCTION task2 (END)

             ; FUNCTION Timer0_Isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 175
001D 900000      R     MOV     DPTR,#ti
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
0022 900000      R     MOV     DPTR,#cut+01H
0025 E0                MOVX    A,@DPTR
0026 04                INC     A
0027 F0                MOVX    @DPTR,A
0028 7006              JNZ     ?C0037
002A 900000      R     MOV     DPTR,#cut
002D E0                MOVX    A,@DPTR
002E 04                INC     A
002F F0                MOVX    @DPTR,A
0030         ?C0037:
                                           ; SOURCE LINE # 178
0030 900000      R     MOV     DPTR,#cut
0033 E0                MOVX    A,@DPTR
0034 B4010E            CJNE    A,#01H,?C0024
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 B4F409            CJNE    A,#0F4H,?C0024
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 12  

003C 900000      R     MOV     DPTR,#cut
003F E4                CLR     A
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
0043 B287              CPL     LED_G
                                           ; SOURCE LINE # 182
0045         ?C0024:
                                           ; SOURCE LINE # 184
0045 900000      R     MOV     DPTR,#ti
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
004A         ?C0025:
004A 900000      R     MOV     DPTR,#ti
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F FD                MOV     R5,A
0050 D3                SETB    C
0051 900000      R     MOV     DPTR,#max_task+01H
0054 E0                MOVX    A,@DPTR
0055 9D                SUBB    A,R5
0056 900000      R     MOV     DPTR,#max_task
0059 E0                MOVX    A,@DPTR
005A 9400              SUBB    A,#00H
005C 5003              JNC     $ + 5H
005E 020000      R     LJMP    ?C0030
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
0061 EF                MOV     A,R7
0062 75F006            MOV     B,#06H
0065 A4                MUL     AB
0066 2400        R     ADD     A,#LOW tcb_list+05H
0068 F8                MOV     R0,A
0069 E6                MOV     A,@R0
006A 6403              XRL     A,#03H
006C 706F              JNZ     ?C0027
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
                                           ; SOURCE LINE # 191
006E 900000      R     MOV     DPTR,#ti
0071 E0                MOVX    A,@DPTR
0072 75F006            MOV     B,#06H
0075 A4                MUL     AB
0076 2400        R     ADD     A,#LOW tcb_list+01H
0078 F8                MOV     R0,A
0079 120000      E     LCALL   ?C?LLDIDATA
007C EF                MOV     A,R7
007D 24FF              ADD     A,#0FFH
007F FF                MOV     R7,A
0080 EE                MOV     A,R6
0081 34FF              ADDC    A,#0FFH
0083 FE                MOV     R6,A
0084 ED                MOV     A,R5
0085 34FF              ADDC    A,#0FFH
0087 FD                MOV     R5,A
0088 EC                MOV     A,R4
0089 34FF              ADDC    A,#0FFH
008B FC                MOV     R4,A
008C E4                CLR     A
008D FB                MOV     R3,A
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 13  

008E FA                MOV     R2,A
008F F9                MOV     R1,A
0090 F8                MOV     R0,A
0091 C3                CLR     C
0092 120000      E     LCALL   ?C?ULCMP
0095 900000      R     MOV     DPTR,#ti
0098 701C              JNZ     ?C0029
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
009A E0                MOVX    A,@DPTR
009B FB                MOV     R3,A
009C 75F006            MOV     B,#06H
009F A4                MUL     AB
00A0 2400        R     ADD     A,#LOW tcb_list+01H
00A2 F8                MOV     R0,A
00A3 120000      E     LCALL   ?C?LSTKIDATA
00A6 00                DB      00H
00A7 00                DB      00H
00A8 00                DB      00H
00A9 00                DB      00H
                                           ; SOURCE LINE # 195
00AA EB                MOV     A,R3
00AB 75F006            MOV     B,#06H
00AE A4                MUL     AB
00AF 2400        R     ADD     A,#LOW tcb_list+05H
00B1 F8                MOV     R0,A
00B2 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 196
00B4 8027              SJMP    ?C0027
                                           ; SOURCE LINE # 197
00B6         ?C0029:
                                           ; SOURCE LINE # 198
00B6 E0                MOVX    A,@DPTR
00B7 FB                MOV     R3,A
00B8 75F006            MOV     B,#06H
00BB A4                MUL     AB
00BC 2400        R     ADD     A,#LOW tcb_list+01H
00BE F8                MOV     R0,A
00BF 120000      E     LCALL   ?C?LLDIDATA
00C2 EF                MOV     A,R7
00C3 24FF              ADD     A,#0FFH
00C5 FF                MOV     R7,A
00C6 EE                MOV     A,R6
00C7 34FF              ADDC    A,#0FFH
00C9 FE                MOV     R6,A
00CA ED                MOV     A,R5
00CB 34FF              ADDC    A,#0FFH
00CD FD                MOV     R5,A
00CE EC                MOV     A,R4
00CF 34FF              ADDC    A,#0FFH
00D1 FC                MOV     R4,A
00D2 EB                MOV     A,R3
00D3 75F006            MOV     B,#06H
00D6 A4                MUL     AB
00D7 2400        R     ADD     A,#LOW tcb_list+01H
00D9 F8                MOV     R0,A
00DA 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 199
00DD         ?C0027:
00DD 900000      R     MOV     DPTR,#ti
00E0 E0                MOVX    A,@DPTR
00E1 04                INC     A
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 14  

00E2 F0                MOVX    @DPTR,A
00E3 020000      R     LJMP    ?C0025
                                           ; SOURCE LINE # 202
00E6         ?C0030:
00E6 D007              POP     AR7
00E8 D006              POP     AR6
00EA D005              POP     AR5
00EC D004              POP     AR4
00EE D003              POP     AR3
00F0 D002              POP     AR2
00F2 D001              POP     AR1
00F4 D000              POP     AR0
00F6 D0D0              POP     PSW
00F8 D082              POP     DPL
00FA D083              POP     DPH
00FC D0F0              POP     B
00FE D0E0              POP     ACC
0100 32                RETI    
             ; FUNCTION Timer0_Isr (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 207
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 208
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 209
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 210
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 211
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 212
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 213
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 219
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 220
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 221
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 222
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 225
000D 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 7400        R     MOV     A,#HIGH task_stack1
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
C51 COMPILER V9.60.7.0   MAIN                                                              12/25/2023 13:32:03 PAGE 15  

0016 7400        R     MOV     A,#LOW task_stack1
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D 04                INC     A
001E F0                MOVX    @DPTR,A
001F 7BFF              MOV     R3,#0FFH
0021 7A00        R     MOV     R2,#HIGH task1
0023 7900        R     MOV     R1,#LOW task1
0025 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 226
0028 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
002B E4                CLR     A
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        R     MOV     A,#HIGH task_stack2
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        R     MOV     A,#LOW task_stack2
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 E4                CLR     A
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7402              MOV     A,#02H
003B F0                MOVX    @DPTR,A
003C 7BFF              MOV     R3,#0FFH
003E 7A00        R     MOV     R2,#HIGH task2
0040 7900        R     MOV     R1,#LOW task2
0042 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 227
0045 120000      R     LCALL   os_start
0048         ?C0032:
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 233
0048 80FE              SJMP    ?C0032
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    696    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     90    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
