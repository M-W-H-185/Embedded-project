C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5_C51\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTE
                    -XTEND CODE PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          
  18          typedef     unsigned char    os_uint8_t;  //  8 bits 
  19          
  20          typedef     unsigned int     os_uint16_t; // 16 bits 
  21          
  22          typedef     unsigned long    os_uint32_t; // 32 bits 
  23          enum OS_TASK_STATUS_TYPE
  24          {
  25            OS_READY      = 1,  // 就绪态
  26            OS_RUNING     = 2,  // 运行态
  27            OS_BLOCKED    = 3,  // 阻塞态
  28            OS_SUSPENDED  = 4 // 停止态
  29          
  30          };
  31          
  32            // 任务控制块
  33            typedef struct os_tcb_t
  34            {
  35              os_uint8_t      sp;         // sp 堆栈指针存储
  36              os_uint32_t     delay_tick;     // 延时滴答数
  37              os_uint8_t      os_status_type;   // 任务状态
  38            };
  39          // 任务控制块的结构体大小
  40          const os_uint8_t data OS_TCB_SIZE = sizeof(struct os_tcb_t);  // 1 + 4 + 1 = 6个字节
  41           
  42          #define MAX_TASKS 5       /*任务槽个数.必须和实际任务数一至*/
  43          #define MAX_TASK_DEP 20   /*最大栈深.最低不得少于2个,保守值为12*/
  44          os_uint8_t data task_id = 0;    /*当前活动任务号*/
  45          os_uint8_t max_task = 0;
  46          
  47          
  48           
  49          extern void test(void);
  50          //// 任务主动放弃cpu资源
  51          //extern void OSCtxSw(void);
  52          
  53          
  54          // 任务控制列表
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 2   

  55          struct os_tcb_t idata tcb_list[MAX_TASKS];
  56          // 任务堆栈区
  57          os_uint8_t idata task_idle_stack[MAX_TASK_DEP];   /*空闲任务堆栈.*/
  58          os_uint8_t idata task_stack1[MAX_TASK_DEP];     /*任务1堆栈.*/
  59          os_uint8_t idata task_stack2[MAX_TASK_DEP];     /*任务2堆栈.*/
  60          // 任务堆栈区
  61          
  62          
  63          // 获取下一个任务id
  64          void os_getNextTaskId(void)
  65          {
  66   1        
  67   1      //  
  68   1      //  
  69   1      //  
  70   1      
  71   1      }
  72          // 任务切换函数
  73          void OSCtxSw()
  74          {
  75   1        os_uint8_t  ost_i = 0;
  76   1      
  77   1        tcb_list[task_id].sp = SP;
  78   1      
  79   1      // 找出就绪态的一个id
  80   1        for(ost_i = 0; ost_i < max_task; ost_i++)
  81   1        {
  82   2          if(tcb_list[ost_i].os_status_type == OS_READY)
  83   2          {
  84   3            task_id = ost_i;
  85   3            continue;
  86   3      
  87   3          }
  88   2        }
  89   1        
  90   1        
  91   1        if(task_id == max_task)
  92   1        {
  93   2          task_id = 0;
  94   2        }
  95   1          SP = tcb_list[task_id].sp;
  96   1      
  97   1      }
  98           
  99          void os_task_create(void(*task)(void) ,os_uint8_t *tstack,int tid)
 100          {
 101   1      
 102   1        tstack[0] = (unsigned int)task & 0xff;
 103   1        tstack[1] = (unsigned int)task >> 8;
 104   1      
 105   1        tcb_list[tid].sp        = tstack+1;
*** WARNING C260 IN LINE 105 OF main.c: '=': pointer truncation
 106   1        tcb_list[tid].os_status_type  = OS_READY;
 107   1      
 108   1        max_task++;
 109   1      }
 110          void os_idle_task(void);
 111          
 112          void os_start()
 113          {
 114   1        // 装载空闲任务
 115   1        os_task_create(os_idle_task, &task_idle_stack, 0);//将task1函数装入0号槽
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 3   

 116   1      
 117   1        task_id = 0;
 118   1        SP = tcb_list[task_id].sp;  
 119   1        return;
 120   1      }
 121          
 122          // 任务延时函数
 123          void os_delay(os_uint32_t tasks)
 124          { 
 125   1        
 126   1        // 设置延时滴答数
 127   1        tcb_list[task_id].delay_tick   =  tasks;
 128   1        // 将任务设置为阻塞态
 129   1        tcb_list[task_id].os_status_type =  OS_BLOCKED;
 130   1        // 只要任务延时了，就马上切换出去
 131   1      OSCtxSw();
 132   1      //  
 133   1      }
 134          // 空闲函数
 135          void os_idle_task(void)
 136          {
 137   1        while(1)
 138   1        {
 139   2      OSCtxSw();
 140   2        }
 141   1      }
 142          
 143          void task1()
 144          {
 145   1        while(1)
 146   1        {
 147   2          LED_R = 1;
 148   2          os_delay(500);
 149   2      
 150   2          LED_R = 0;
 151   2          os_delay(500);
 152   2          
 153   2          LED_R = 1;
 154   2          os_delay(500);
 155   2      OSCtxSw();
 156   2      
 157   2        }
 158   1      }
 159          
 160          void task2()
 161          {
 162   1      
 163   1        while(1)
 164   1        {
 165   2          LED_Y = 1;
 166   2          os_delay(1000);
 167   2          
 168   2          LED_Y = 0;
 169   2          os_delay(1000);
 170   2          OSCtxSw();
 171   2      
 172   2        }
 173   1      }
 174          
 175          
 176          unsigned int cut = 0;
 177          
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 4   

 178          //void time0_handle(void)large reentrant
 179          void time0_handle(void)interrupt 1
 180          {
 181   1        os_uint8_t ti = 0;
 182   1        cut++;
 183   1      
 184   1        if(cut == 500)
 185   1        {
 186   2          cut = 0;
 187   2          LED_G = !LED_G;
 188   2        }
 189   1        // 在这里处理遍历延时
 190   1        for(ti = 0; ti<max_task; ti++)
 191   1        {
 192   2          if(tcb_list[ti].os_status_type != OS_BLOCKED)
 193   2          {
 194   3            continue;
 195   3          }
 196   2          // 设置延时滴答数
 197   2          if((tcb_list[ti].delay_tick - 1) == 0)
 198   2          {
 199   3            tcb_list[ti].delay_tick = 0;
 200   3            // 将任务设置为阻塞态
 201   3            tcb_list[ti].os_status_type = OS_READY;
 202   3            continue;
 203   3          }
 204   2          tcb_list[ti].delay_tick--;
 205   2        }
 206   1      }
 207          
 208          void Timer0_Init(void)    //1毫秒@11.0592MHz
 209          {
 210   1        AUXR |= 0x80;     //定时器时钟1T模式
 211   1        TMOD &= 0xF0;     //设置定时器模式
 212   1        TL0 = 0xCD;       //设置定时初始值
 213   1        TH0 = 0xD4;       //设置定时初始值
 214   1        TF0 = 0;        //清除TF0标志
 215   1        TR0 = 1;        //定时器0开始计时
 216   1        ET0 = 1;        //使能定时器0中断
 217   1      }
 218          
 219          /* 主函数 */
 220          void main()
 221          {
 222   1        P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 223   1        P0M1 = 0x00;
 224   1        Timer0_Init();
 225   1        EA = 1;
 226   1        P_SW2 |= (1<<7);
 227   1      //  
 228   1      //  test();
 229   1        os_task_create(task1, &task_stack1, 1);//将task1函数装入0号槽
 230   1        os_task_create(task2, &task_stack2, 2);//将task2函数装入1号槽
 231   1        os_start();
 232   1      
 233   1      
 234   1        while(1)
 235   1        {
 236   2      
 237   2        }
 238   1        
 239   1      
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 5   

 240   1      }
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION os_getNextTaskId (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 71
0000 22                RET     
             ; FUNCTION os_getNextTaskId (END)

             ; FUNCTION OSCtxSw (BEGIN)
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
;---- Variable 'ost_i' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
                                           ; SOURCE LINE # 77
0002 E500        R     MOV     A,task_id
0004 75F006            MOV     B,#06H
0007 A4                MUL     AB
0008 2400        R     ADD     A,#LOW tcb_list
000A F8                MOV     R0,A
000B A681              MOV     @R0,SP
                                           ; SOURCE LINE # 80
000D         ?C0002:
000D 900000      R     MOV     DPTR,#max_task
0010 E0                MOVX    A,@DPTR
0011 FE                MOV     R6,A
0012 EF                MOV     A,R7
0013 C3                CLR     C
0014 9E                SUBB    A,R6
0015 5012              JNC     ?C0003
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0017 EF                MOV     A,R7
0018 75F006            MOV     B,#06H
001B A4                MUL     AB
001C 2400        R     ADD     A,#LOW tcb_list+05H
001E F8                MOV     R0,A
001F E6                MOV     A,@R0
0020 6401              XRL     A,#01H
0022 7002              JNZ     ?C0004
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0024 8F00        R     MOV     task_id,R7
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
0026         ?C0004:
0026 0F                INC     R7
0027 80E4              SJMP    ?C0002
0029         ?C0003:
                                           ; SOURCE LINE # 91
0029 E500        R     MOV     A,task_id
002B B50603            CJNE    A,AR6,?C0006
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
002E E4                CLR     A
002F F500        R     MOV     task_id,A
                                           ; SOURCE LINE # 94
0031         ?C0006:
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 7   

                                           ; SOURCE LINE # 95
0031 E500        R     MOV     A,task_id
0033 75F006            MOV     B,#06H
0036 A4                MUL     AB
0037 2400        R     ADD     A,#LOW tcb_list
0039 F8                MOV     R0,A
003A E6                MOV     A,@R0
003B F581              MOV     SP,A
                                           ; SOURCE LINE # 97
003D 22                RET     
             ; FUNCTION OSCtxSw (END)

             ; FUNCTION _os_task_create (BEGIN)
                                           ; SOURCE LINE # 99
0000 900000      R     MOV     DPTR,#task
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 102
000B 900000      R     MOV     DPTR,#task
000E A3                INC     DPTR
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 A3                INC     DPTR
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B EF                MOV     A,R7
001C 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 103
001F 900000      R     MOV     DPTR,#task
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FA                MOV     R2,A
0025 A3                INC     DPTR
0026 EA                MOV     A,R2
0027 FF                MOV     R7,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 900001            MOV     DPTR,#01H
0034 EF                MOV     A,R7
0035 120000      E     LCALL   ?C?CSTOPTR
                                           ; SOURCE LINE # 105
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 8   

0038 E9                MOV     A,R1
0039 2401              ADD     A,#01H
003B F9                MOV     R1,A
003C 900000      R     MOV     DPTR,#tid
003F A3                INC     DPTR
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 75F006            MOV     B,#06H
0045 A4                MUL     AB
0046 2400        R     ADD     A,#LOW tcb_list
0048 F8                MOV     R0,A
0049 A601              MOV     @R0,AR1
                                           ; SOURCE LINE # 106
004B EE                MOV     A,R6
004C 75F006            MOV     B,#06H
004F A4                MUL     AB
0050 2400        R     ADD     A,#LOW tcb_list+05H
0052 F8                MOV     R0,A
0053 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 108
0055 900000      R     MOV     DPTR,#max_task
0058 E0                MOVX    A,@DPTR
0059 04                INC     A
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 109
005B 22                RET     
             ; FUNCTION _os_task_create (END)

             ; FUNCTION os_start (BEGIN)
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 115
0000 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 7400        R     MOV     A,#HIGH task_idle_stack
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A 7400        R     MOV     A,#LOW task_idle_stack
000C F0                MOVX    @DPTR,A
000D E4                CLR     A
000E A3                INC     DPTR
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 F0                MOVX    @DPTR,A
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH os_idle_task
0016 7900        R     MOV     R1,#LOW os_idle_task
0018 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 117
001B E4                CLR     A
001C F500        R     MOV     task_id,A
                                           ; SOURCE LINE # 118
001E E500        R     MOV     A,task_id
0020 75F006            MOV     B,#06H
0023 A4                MUL     AB
0024 2400        R     ADD     A,#LOW tcb_list
0026 F8                MOV     R0,A
0027 E6                MOV     A,@R0
0028 F581              MOV     SP,A
                                           ; SOURCE LINE # 120
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 9   

002A 22                RET     
             ; FUNCTION os_start (END)

             ; FUNCTION L?0033 (BEGIN)
0000 D285              SETB    LED_R
0002         L?0034:
0002 7FF4              MOV     R7,#0F4H
0004 7E01              MOV     R6,#01H
0006         L?0035:
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
             ; FUNCTION _os_delay (BEGIN)
                                           ; SOURCE LINE # 123
;---- Variable 'tasks' assigned to Register 'R4/R5/R6/R7' ----
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 127
000A E500        R     MOV     A,task_id
000C 75F006            MOV     B,#06H
000F A4                MUL     AB
0010 2400        R     ADD     A,#LOW tcb_list+01H
0012 F8                MOV     R0,A
0013 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 129
0016 E500        R     MOV     A,task_id
0018 75F006            MOV     B,#06H
001B A4                MUL     AB
001C 2400        R     ADD     A,#LOW tcb_list+05H
001E F8                MOV     R0,A
001F 7603              MOV     @R0,#03H
                                           ; SOURCE LINE # 131
0021 020000      R     LJMP    OSCtxSw
             ; FUNCTION _os_delay (END)

             ; FUNCTION os_idle_task (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0000         ?C0011:
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
0000 120000      R     LCALL   OSCtxSw
                                           ; SOURCE LINE # 140
0003 80FB              SJMP    ?C0011
             ; FUNCTION os_idle_task (END)

             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
0000         ?C0014:
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0000 120000      R     LCALL   L?0033
                                           ; SOURCE LINE # 150
0003 C285              CLR     LED_R
                                           ; SOURCE LINE # 151
0005 120000      R     LCALL   L?0034
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0008 120000      R     LCALL   L?0033
                                           ; SOURCE LINE # 155
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 10  

000B 120000      R     LCALL   OSCtxSw
                                           ; SOURCE LINE # 157
000E 80F0              SJMP    ?C0014
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 161
0000         ?C0017:
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
0000 D286              SETB    LED_Y
                                           ; SOURCE LINE # 166
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 120000      R     LCALL   L?0035
                                           ; SOURCE LINE # 168
0009 C286              CLR     LED_Y
                                           ; SOURCE LINE # 169
000B 7FE8              MOV     R7,#0E8H
000D 7E03              MOV     R6,#03H
000F 120000      R     LCALL   L?0035
                                           ; SOURCE LINE # 170
0012 120000      R     LCALL   OSCtxSw
                                           ; SOURCE LINE # 172
0015 80E9              SJMP    ?C0017
             ; FUNCTION task2 (END)

             ; FUNCTION time0_handle (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 181
001D 900000      R     MOV     DPTR,#ti
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
0022 900000      R     MOV     DPTR,#cut+01H
0025 E0                MOVX    A,@DPTR
0026 04                INC     A
0027 F0                MOVX    @DPTR,A
0028 7006              JNZ     ?C0031
002A 900000      R     MOV     DPTR,#cut
002D E0                MOVX    A,@DPTR
002E 04                INC     A
002F F0                MOVX    @DPTR,A
0030         ?C0031:
                                           ; SOURCE LINE # 184
0030 900000      R     MOV     DPTR,#cut
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 11  

0033 E0                MOVX    A,@DPTR
0034 B4010E            CJNE    A,#01H,?C0020
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 B4F409            CJNE    A,#0F4H,?C0020
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
003C 900000      R     MOV     DPTR,#cut
003F E4                CLR     A
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0043 B287              CPL     LED_G
                                           ; SOURCE LINE # 188
0045         ?C0020:
                                           ; SOURCE LINE # 190
0045 900000      R     MOV     DPTR,#ti
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
004A         ?C0021:
004A 900000      R     MOV     DPTR,#max_task
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F 900000      R     MOV     DPTR,#ti
0052 E0                MOVX    A,@DPTR
0053 FE                MOV     R6,A
0054 C3                CLR     C
0055 9F                SUBB    A,R7
0056 4003              JC      $ + 5H
0058 020000      R     LJMP    ?C0026
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
005B EE                MOV     A,R6
005C 75F006            MOV     B,#06H
005F A4                MUL     AB
0060 2400        R     ADD     A,#LOW tcb_list+05H
0062 F8                MOV     R0,A
0063 E6                MOV     A,@R0
0064 6403              XRL     A,#03H
0066 706C              JNZ     ?C0023
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 197
0068 E0                MOVX    A,@DPTR
0069 75F006            MOV     B,#06H
006C A4                MUL     AB
006D 2400        R     ADD     A,#LOW tcb_list+01H
006F F8                MOV     R0,A
0070 120000      E     LCALL   ?C?LLDIDATA
0073 EF                MOV     A,R7
0074 24FF              ADD     A,#0FFH
0076 FF                MOV     R7,A
0077 EE                MOV     A,R6
0078 34FF              ADDC    A,#0FFH
007A FE                MOV     R6,A
007B ED                MOV     A,R5
007C 34FF              ADDC    A,#0FFH
007E FD                MOV     R5,A
007F EC                MOV     A,R4
0080 34FF              ADDC    A,#0FFH
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 12  

0082 FC                MOV     R4,A
0083 E4                CLR     A
0084 FB                MOV     R3,A
0085 FA                MOV     R2,A
0086 F9                MOV     R1,A
0087 F8                MOV     R0,A
0088 C3                CLR     C
0089 120000      E     LCALL   ?C?ULCMP
008C 900000      R     MOV     DPTR,#ti
008F 701C              JNZ     ?C0025
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
0091 E0                MOVX    A,@DPTR
0092 FB                MOV     R3,A
0093 75F006            MOV     B,#06H
0096 A4                MUL     AB
0097 2400        R     ADD     A,#LOW tcb_list+01H
0099 F8                MOV     R0,A
009A 120000      E     LCALL   ?C?LSTKIDATA
009D 00                DB      00H
009E 00                DB      00H
009F 00                DB      00H
00A0 00                DB      00H
                                           ; SOURCE LINE # 201
00A1 EB                MOV     A,R3
00A2 75F006            MOV     B,#06H
00A5 A4                MUL     AB
00A6 2400        R     ADD     A,#LOW tcb_list+05H
00A8 F8                MOV     R0,A
00A9 7601              MOV     @R0,#01H
                                           ; SOURCE LINE # 202
00AB 8027              SJMP    ?C0023
                                           ; SOURCE LINE # 203
00AD         ?C0025:
                                           ; SOURCE LINE # 204
00AD E0                MOVX    A,@DPTR
00AE FB                MOV     R3,A
00AF 75F006            MOV     B,#06H
00B2 A4                MUL     AB
00B3 2400        R     ADD     A,#LOW tcb_list+01H
00B5 F8                MOV     R0,A
00B6 120000      E     LCALL   ?C?LLDIDATA
00B9 EF                MOV     A,R7
00BA 24FF              ADD     A,#0FFH
00BC FF                MOV     R7,A
00BD EE                MOV     A,R6
00BE 34FF              ADDC    A,#0FFH
00C0 FE                MOV     R6,A
00C1 ED                MOV     A,R5
00C2 34FF              ADDC    A,#0FFH
00C4 FD                MOV     R5,A
00C5 EC                MOV     A,R4
00C6 34FF              ADDC    A,#0FFH
00C8 FC                MOV     R4,A
00C9 EB                MOV     A,R3
00CA 75F006            MOV     B,#06H
00CD A4                MUL     AB
00CE 2400        R     ADD     A,#LOW tcb_list+01H
00D0 F8                MOV     R0,A
00D1 120000      E     LCALL   ?C?LSTIDATA
                                           ; SOURCE LINE # 205
00D4         ?C0023:
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 13  

00D4 900000      R     MOV     DPTR,#ti
00D7 E0                MOVX    A,@DPTR
00D8 04                INC     A
00D9 F0                MOVX    @DPTR,A
00DA 020000      R     LJMP    ?C0021
                                           ; SOURCE LINE # 206
00DD         ?C0026:
00DD D007              POP     AR7
00DF D006              POP     AR6
00E1 D005              POP     AR5
00E3 D004              POP     AR4
00E5 D003              POP     AR3
00E7 D002              POP     AR2
00E9 D001              POP     AR1
00EB D000              POP     AR0
00ED D0D0              POP     PSW
00EF D082              POP     DPL
00F1 D083              POP     DPH
00F3 D0F0              POP     B
00F5 D0E0              POP     ACC
00F7 32                RETI    
             ; FUNCTION time0_handle (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 211
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 212
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 213
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 214
000C C28D              CLR     TF0
                                           ; SOURCE LINE # 215
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 216
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 217
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
                                           ; SOURCE LINE # 222
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 223
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 224
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 225
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 226
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 229
000D 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
C51 COMPILER V9.59.0.0   MAIN                                                              12/26/2023 22:59:25 PAGE 14  

0012 7400        R     MOV     A,#HIGH task_stack1
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 7400        R     MOV     A,#LOW task_stack1
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D 04                INC     A
001E F0                MOVX    @DPTR,A
001F 7BFF              MOV     R3,#0FFH
0021 7A00        R     MOV     R2,#HIGH task1
0023 7900        R     MOV     R1,#LOW task1
0025 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 230
0028 900000      R     MOV     DPTR,#?_os_task_create?BYTE+03H
002B E4                CLR     A
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        R     MOV     A,#HIGH task_stack2
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        R     MOV     A,#LOW task_stack2
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 E4                CLR     A
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7402              MOV     A,#02H
003B F0                MOVX    @DPTR,A
003C 7BFF              MOV     R3,#0FFH
003E 7A00        R     MOV     R2,#HIGH task2
0040 7900        R     MOV     R1,#LOW task2
0042 120000      R     LCALL   _os_task_create
                                           ; SOURCE LINE # 231
0045 120000      R     LCALL   os_start
0048         ?C0028:
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 237
0048 80FE              SJMP    ?C0028
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    619    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =     90    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
