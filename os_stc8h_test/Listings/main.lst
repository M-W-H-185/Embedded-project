C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\XmRTOS) DEBUG OBJECTEXTEND CODE
                    - PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          标题：LED红绿灯系统
   3          主频：35MHz
   4          用于：51单片机学习机-学电 
   5          资料：https://rationmcu.com
   6          */
   7          
   8          #include "stc8g.h"
   9          #include "intrins.h"
  10          #include "stdio.h"
  11          #include "os_task.h"
  12          
  13          /* 发光二极管定义 */
  14          sbit LED_R = P0^5;    // 红色LED
  15          sbit LED_Y = P0^6;    // 黄色LED
  16          sbit LED_G = P0^7;    // 绿色LED
  17          
  18          
  19          
  20          
  21          // 任务堆栈区
  22          os_uint8_t idata task_stack1[MAX_TASK_DEP];                     /*任务1堆栈.*/
  23          os_uint8_t idata task_stack2[MAX_TASK_DEP];                     /*任务2堆栈.*/
  24          os_uint8_t idata task_stack3[MAX_TASK_DEP];                     /*任务2堆栈.*/
  25          // 任务堆栈区
  26          
  27          
  28          
  29          void task1()
  30          {
  31   1              while(1)
  32   1              {
  33   2                      LED_R = 1;
  34   2                      os_delay(500);
  35   2      
  36   2                      LED_R = 0;
  37   2                      os_delay(500);
  38   2                      
  39   2                      LED_R = 1;
  40   2                      os_delay(500);
  41   2      
  42   2              }
  43   1      }
  44          
  45          void task2()
  46          {
  47   1      
  48   1              while(1)
  49   1              {
  50   2                      LED_Y = 1;
  51   2                      os_delay(1000);
  52   2                      os_delay(1000);
  53   2                      
  54   2                      LED_Y = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 2   

  55   2                      os_delay(1000);
  56   2                      os_delay(1000);
  57   2      
  58   2              }
  59   1      }
  60          void task3()
  61          {
  62   1      
  63   1              while(1)
  64   1              {
  65   2              
  66   2                      LED_G = !LED_G;
  67   2                      os_delay(1000);
  68   2                      os_delay(1000);
  69   2                      os_delay(1000);
  70   2                      os_delay(1000);
  71   2              }
  72   1      }
  73          
  74          
  75          
  76          void Timer0_Init(void)          //1毫秒@11.0592MHz
  77          {
  78   1              AUXR |= 0x80;                   //定时器时钟1T模式
  79   1              TMOD &= 0xF0;                   //设置定时器模式
  80   1              TL0 = 0xCD;                             //设置定时初始值
  81   1              TH0 = 0xD4;                             //设置定时初始值
  82   1              TF0 = 0;                                //清除TF0标志
  83   1              TR0 = 1;                                //定时器0开始计时
  84   1              ET0 = 1;                                //使能定时器0中断
  85   1      }
  86          
  87          unsigned int cut = 0;
  88          
  89          // 函数冲重入，由汇编代码调用
  90          void time0_handle(void)large reentrant
  91          //void time0_handle(void)interrupt 1
  92          {
  93   1      //      cut++;
  94   1      
  95   1      //      if(cut == 500)
  96   1      //      {
  97   1      //              cut = 0;
  98   1      //              LED_G = !LED_G;
  99   1      //      }
 100   1              time_handleHook();
 101   1      }
 102          /* 主函数 */
 103          void main()
 104          {
 105   1              P0M0 = 0x00;   //设置P0.0~P0.7为双向口模式
 106   1              P0M1 = 0x00;
 107   1              Timer0_Init();
 108   1              EA = 1;
 109   1              P_SW2 |= (1<<7);
 110   1      
 111   1              os_task_create(task1, &task_stack1, 1);//将task1函数装入0号槽
 112   1              os_task_create(task2, &task_stack2, 2);//将task2函数装入1号槽
 113   1              os_task_create(task3, &task_stack3, 3);//将task2函数装入3号槽
 114   1              os_start();
 115   1      
 116   1      
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 3   

 117   1              while(1)
 118   1              {
 119   2      
 120   2              }
 121   1              
 122   1      
 123   1      }
 124          
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION task1 (BEGIN)
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
0000         ?C0001:
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0000 D285              SETB    LED_R
                                           ; SOURCE LINE # 34
0002 7FF4              MOV     R7,#0F4H
0004 7E01              MOV     R6,#01H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 36
000D C285              CLR     LED_R
                                           ; SOURCE LINE # 37
000F 7FF4              MOV     R7,#0F4H
0011 7E01              MOV     R6,#01H
0013 7D00              MOV     R5,#00H
0015 7C00              MOV     R4,#00H
0017 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 39
001A D285              SETB    LED_R
                                           ; SOURCE LINE # 40
001C 7FF4              MOV     R7,#0F4H
001E 7E01              MOV     R6,#01H
0020 7D00              MOV     R5,#00H
0022 7C00              MOV     R4,#00H
0024 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 42
0027 80D7              SJMP    ?C0001
             ; FUNCTION task1 (END)

             ; FUNCTION task2 (BEGIN)
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000         ?C0004:
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
0000 D286              SETB    LED_Y
                                           ; SOURCE LINE # 51
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 52
000D 7FE8              MOV     R7,#0E8H
000F 7E03              MOV     R6,#03H
0011 7D00              MOV     R5,#00H
0013 7C00              MOV     R4,#00H
0015 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 54
0018 C286              CLR     LED_Y
                                           ; SOURCE LINE # 55
001A 7FE8              MOV     R7,#0E8H
001C 7E03              MOV     R6,#03H
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 5   

001E 7D00              MOV     R5,#00H
0020 7C00              MOV     R4,#00H
0022 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 56
0025 7FE8              MOV     R7,#0E8H
0027 7E03              MOV     R6,#03H
0029 7D00              MOV     R5,#00H
002B 7C00              MOV     R4,#00H
002D 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 58
0030 80CE              SJMP    ?C0004
             ; FUNCTION task2 (END)

             ; FUNCTION task3 (BEGIN)
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0000         ?C0007:
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 66
0000 B287              CPL     LED_G
                                           ; SOURCE LINE # 67
0002 7FE8              MOV     R7,#0E8H
0004 7E03              MOV     R6,#03H
0006 7D00              MOV     R5,#00H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 68
000D 7FE8              MOV     R7,#0E8H
000F 7E03              MOV     R6,#03H
0011 7D00              MOV     R5,#00H
0013 7C00              MOV     R4,#00H
0015 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 69
0018 7FE8              MOV     R7,#0E8H
001A 7E03              MOV     R6,#03H
001C 7D00              MOV     R5,#00H
001E 7C00              MOV     R4,#00H
0020 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 70
0023 7FE8              MOV     R7,#0E8H
0025 7E03              MOV     R6,#03H
0027 7D00              MOV     R5,#00H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _os_delay
                                           ; SOURCE LINE # 71
002E 80D0              SJMP    ?C0007
             ; FUNCTION task3 (END)

             ; FUNCTION Timer0_Init (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0000 438E80            ORL     AUXR,#080H
                                           ; SOURCE LINE # 79
0003 5389F0            ANL     TMOD,#0F0H
                                           ; SOURCE LINE # 80
0006 758ACD            MOV     TL0,#0CDH
                                           ; SOURCE LINE # 81
0009 758CD4            MOV     TH0,#0D4H
                                           ; SOURCE LINE # 82
000C C28D              CLR     TF0
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 6   

                                           ; SOURCE LINE # 83
000E D28C              SETB    TR0
                                           ; SOURCE LINE # 84
0010 D2A9              SETB    ET0
                                           ; SOURCE LINE # 85
0012 22                RET     
             ; FUNCTION Timer0_Init (END)

             ; FUNCTION _?time0_handle (BEGIN)
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 100
0000 020000      E     LJMP    time_handleHook
             ; FUNCTION _?time0_handle (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0000 E4                CLR     A
0001 F594              MOV     P0M0,A
                                           ; SOURCE LINE # 106
0003 F593              MOV     P0M1,A
                                           ; SOURCE LINE # 107
0005 120000      R     LCALL   Timer0_Init
                                           ; SOURCE LINE # 108
0008 D2AF              SETB    EA
                                           ; SOURCE LINE # 109
000A 43BA80            ORL     P_SW2,#080H
                                           ; SOURCE LINE # 111
000D F500        E     MOV     ?_os_task_create?BYTE+03H,A
000F 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack1
0012 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack1
0015 F500        E     MOV     ?_os_task_create?BYTE+06H,A
0017 750001      E     MOV     ?_os_task_create?BYTE+07H,#01H
001A 7BFF              MOV     R3,#0FFH
001C 7A00        R     MOV     R2,#HIGH task1
001E 7900        R     MOV     R1,#LOW task1
0020 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 112
0023 750000      E     MOV     ?_os_task_create?BYTE+03H,#00H
0026 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack2
0029 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack2
002C 750000      E     MOV     ?_os_task_create?BYTE+06H,#00H
002F 750002      E     MOV     ?_os_task_create?BYTE+07H,#02H
0032 7BFF              MOV     R3,#0FFH
0034 7A00        R     MOV     R2,#HIGH task2
0036 7900        R     MOV     R1,#LOW task2
0038 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 113
003B 750000      E     MOV     ?_os_task_create?BYTE+03H,#00H
003E 750000      R     MOV     ?_os_task_create?BYTE+04H,#HIGH task_stack3
0041 750000      R     MOV     ?_os_task_create?BYTE+05H,#LOW task_stack3
0044 750000      E     MOV     ?_os_task_create?BYTE+06H,#00H
0047 750003      E     MOV     ?_os_task_create?BYTE+07H,#03H
004A 7BFF              MOV     R3,#0FFH
004C 7A00        R     MOV     R2,#HIGH task3
004E 7900        R     MOV     R1,#LOW task3
0050 120000      E     LCALL   _os_task_create
                                           ; SOURCE LINE # 114
0053 120000      E     LCALL   os_start
0056         ?C0012:
                                           ; SOURCE LINE # 117
C51 COMPILER V9.60.7.0   MAIN                                                              12/28/2023 15:49:26 PAGE 7   

                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 120
0056 80FE              SJMP    ?C0012
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    249    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =     60    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
